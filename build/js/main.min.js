(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _iosVhFix = require("./utils/ios-vh-fix");
var _initModals = require("./modules/modals/init-modals");
var _form = require("./modules/form-validate/form");
var _customSelect = require("./modules/select/custom-select");
var _index = require("./modules/header/index.js");
require("./utils/observers");
var _animation = require("./modules/animation");
var _loader = require("./modules/loader");
var _initMoveTo = require("./modules/init-move-to.js");
var _initMaps = require("./modules/maps/init-maps.js");
// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  (0, _iosVhFix.iosVhFix)();
  (0, _index.initHeaderModules)();
  var loader = new _loader.Loader();

  // Modules
  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    (0, _initModals.initModals)();
    var select = new _customSelect.CustomSelect();
    select.init();
    var form = new _form.Form();
    window.form = form;
    form.init();
    (0, _initMaps.initMaps)();
    (0, _initMoveTo.initScrollTo)();
  });
  window.addEventListener('loaderOff', function () {
    (0, _animation.initAnimationModule)();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

},{"./modules/animation":4,"./modules/form-validate/form":8,"./modules/header/index.js":14,"./modules/init-move-to.js":17,"./modules/loader":18,"./modules/maps/init-maps.js":24,"./modules/modals/init-modals":29,"./modules/select/custom-select":32,"./utils/ios-vh-fix":36,"./utils/observers":37}],2:[function(require,module,exports){
"use strict";

var _scrollTriggerMin = require("../../vendor/gsap/scroll-trigger.min.js");
var _pageScroller = require("../../utils/page-scroller.js");
// этот файл является частью модуля animation.js
// по скроллу на блоках с дата-атрибутом data-animate="fade", далее блок, запускается одна из анимаций
_scrollTriggerMin.ScrollTrigger.batch('[data-animate="fade"]', {
  onEnter: function onEnter(batch) {
    return gsap.to(batch, {
      // анимация, когда доскроллили до блока
      autoAlpha: 1,
      duration: 0.45,
      stagger: 0.1,
      // управление прозрачностью
      overwrite: true // перезапись анимации
    });
  },

  onLeave: function onLeave(batch) {
    return gsap.to(batch, {
      // анимация, когда блок покидает вьюпорт (вверх)
      autoAlpha: 0,
      stagger: 0.1,
      overwrite: true
    });
  },
  onEnterBack: function onEnterBack(batch) {
    return gsap.to(batch, {
      // анимация, когда блок покидает вьюпорт (вниз)
      autoAlpha: 1,
      stagger: 0.1,
      overwrite: true
    });
  },
  onLeaveBack: function onLeaveBack(batch) {
    return gsap.to(batch, {
      // анимация, когда блок возвращается во вьюпорт (сверху)
      autoAlpha: 0,
      duration: 45,
      stagger: 0.1,
      overwrite: true
    });
  },
  start: 'top center',
  // место во вьюпорте, где стартует анимация (в данном случае когда верхняя грань блока доходит до центра)
  scroller: _pageScroller.pageScroller // назначение контейнера в котором происходит скролл
});

// по скроллу на блоках с дата атрибутом data-animate="fadeIn"
_scrollTriggerMin.ScrollTrigger.batch('[data-animate="fadeIn"]', {
  onEnter: function onEnter(batch) {
    return gsap.to('[data-animate="fadeIn"] [data-animate-item]', {
      // здесь анимируются не весе блоки из бетча,
      autoAlpha: 1,
      y: 0,
      duration: 0.45,
      stagger: 0.1 // а блоки в бетче соответствующие селектору в первом параметре
    });
  },

  start: 'top center',
  scroller: _pageScroller.pageScroller
});

// по скроллу на блоках с дата атрибутом data-animate="fadeScale"
_scrollTriggerMin.ScrollTrigger.batch('[data-animate="fadeScale"]', {
  onEnter: function onEnter(batch) {
    return gsap.to('[data-animate="fadeScale"] [data-animate-item]', {
      autoAlpha: 1,
      scale: 1,
      duration: 0.45,
      ease: 'back.out(1.5)',
      stagger: 0.1
    });
  },
  start: 'top center',
  scroller: _pageScroller.pageScroller
});

},{"../../utils/page-scroller.js":38,"../../vendor/gsap/scroll-trigger.min.js":42}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateTimeline = void 0;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
// ---
// generateTimeline module
// создает анимации по скроллу с помощью дата атрибута
var vpTouch = window.matchMedia('(pointer: coarse)');

//функция возвращающая сумму ширин переданных блоков
var getMaxWidth = function getMaxWidth(blocks) {
  var maxWidth = 0;
  blocks.forEach(function (block) {
    maxWidth += block.offsetWidth;
  });
  return maxWidth;
};

//функция возвращает объект, содержащий, ключ значение, работает только со строками которые соответствуют структуре объекта
var getObjectFromString = function getObjectFromString(str) {
  if (str.indexOf('clipPath') !== -1) {
    var arr = str.split(':');
    return {
      clipPath: arr[1]
    };
  }
  return str.split(',').map(function (keyVal) {
    return keyVal.split(':').map(function (_) {
      return _.trim();
    });
  }).reduce(function (accumulator, currentValue) {
    accumulator[currentValue[0]] = isNaN(Number(currentValue[1])) ? currentValue[1] : Number(currentValue[1]);
    return accumulator;
  }, {});
};

//фукция возвращает объект с конфигурацией анимации
function getAnimationObject(el) {
  var obj = {};
  obj.direction = el.dataset.animationDirection; //направление
  obj.duration = +el.dataset.animationDuration || 1; //продолжительность
  obj.delay = +el.dataset.animationDelay || 0; //задержка
  obj.position = el.dataset.position; //позиция
  obj.element = el; //анимируемый элемент
  obj.animation = getObjectFromString(el.dataset.animation.toString()); //настройка анимация из дата-атрибута
  return obj;
}

//основная функция данного блока
var generateTimeline = function generateTimeline() {
  var sections = document.querySelectorAll('[data-section-animation]'); //получаем анимируемые секции
  sections.forEach(function (section) {
    //основной цикл функции
    var blocks = gsap.utils.toArray(section.querySelectorAll("[data-animation]")).sort(function (a, b) {
      //сортируем секции по индексу
      var aIndex = +a.dataset.index || 1;
      var bIndex = +b.dataset.index || 1;
      return aIndex - bIndex;
    });
    var tl = window.gsap.timeline({
      //создаем gsap таймлайн
      scrollTrigger: {
        //конфигурируем скроллтригер
        scroller: vpTouch.matches ? '.wrapper' : 'body',
        //определяем обертку для скролла в зависимости от устройства(тач не тач)
        trigger: section,
        //привязываем тригер к секции
        start: section.dataset.start,
        //начало анимации
        end: section.hasAttribute('data-end') ? section.dataset.end : function () {
          return "+=".concat(getMaxWidth(blocks));
        },
        //конец анимации
        scrub: section.dataset.scrub ? Number(section.dataset.scrub) : 1,
        //параметр отвечающий за анимацию во время прокрутки страницы (если true, то анимация будет проигрываться в соответствии с прогрессом прокрутки)
        pin: section.hasAttribute('data-pin') ? true : false,
        // в демонстрации не применяется
        pinSpacing: section.hasAttribute('data-pin-spacing') ? true : false // в демонстрации не применяется
      }
    });
    //накидываем параметры анимации из дата-атрибута
    blocks.forEach(function (block) {
      var obj = getAnimationObject(block);
      if (obj.position) {
        tl[obj.direction](obj.element, _objectSpread({
          duration: obj.duration,
          delay: obj.delay
        }, obj.animation), obj.position);
      } else {
        tl[obj.direction](obj.element, _objectSpread({
          duration: obj.duration,
          delay: obj.delay
        }, obj.animation));
      }
    });
  });
};
exports.generateTimeline = generateTimeline;

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initAnimationModule = void 0;
var _scrollSlider = require("./scroll-slider");
var _generateTimeline = require("./generate-timeline.js");
require("./batch-blocks");
var _parallax = require("./parallax.js");
// основной блок модуля animation (работает как main для всего js, но в рамках директории animation)
// за счет чего можно обращаться с папкой animation как с единым модулем
var initAnimationModule = function initAnimationModule() {
  var sliderContainer = document.querySelector('[data-scroll-slider="parent"]');
  var scrollSlider = new _scrollSlider.ScrollSlider(sliderContainer);
  (0, _generateTimeline.generateTimeline)();
  (0, _parallax.initParallaxComponents)();
};
exports.initAnimationModule = initAnimationModule;

},{"./batch-blocks":2,"./generate-timeline.js":3,"./parallax.js":5,"./scroll-slider":6}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initParallaxComponents = void 0;
var _scrollTriggerMin = require("../../vendor/gsap/scroll-trigger.min.js");
var _pageScroller = require("../../utils/page-scroller.js");
var vp767 = window.matchMedia('(max-width: 767px)');

// функция добавляет анимацию прозрачности с небольшим масштабированием
var fadeScaleParallax = function fadeScaleParallax() {
  var items = document.querySelectorAll('[data-parallax="fadeScale"]');
  if (!items.length) {
    // проверка наличия анимируемых блоков
    return;
  }

  // набрасываем анимацию на каждый блок
  items.forEach(function (item) {
    var animateContainer = item.querySelector('[data-parallax="item"]');
    // начальное значение (перед анимацией)
    gsap.set(animateContainer, {
      opacity: 0,
      scale: 0.7
    });
    //сама анимация
    var tl = gsap.to(animateContainer, {
      opacity: 1,
      scale: 1
    });
    // конфигурация тригера
    _scrollTriggerMin.ScrollTrigger.create({
      // отслеживаемый элемент
      trigger: item,
      // блок в котором происходит прокрутка
      scroller: _pageScroller.pageScroller,
      // настройка позиции элемента во вьюпорте (когда начинается анимация, когда заканчивается)
      start: 'top bottom',
      end: vp767.matches ? 'center center' : 'top center',
      // если true будет воспроизводится в соответствии с прогрессом прокрутки
      scrub: true,
      // то какая анимация проиграется
      animation: tl
    });
  });
};

// функция добавляет анимацию трансформации по вертикали
// конфигурация аналогична той что описана выше
var transformYParallax = function transformYParallax() {
  var items = document.querySelectorAll('[data-parallax="transformY"]');
  if (!items.length) {
    return;
  }
  items.forEach(function (item) {
    var animateContainer = item.querySelector('[data-parallax="item"]');
    gsap.set(animateContainer, {
      y: item.dataset.from ? item.dataset.from : '100%',
      z: 0
    });
    var tl = gsap.to(animateContainer, {
      y: 0
    });
    _scrollTriggerMin.ScrollTrigger.create({
      trigger: item,
      scroller: _pageScroller.pageScroller,
      start: 'top bottom',
      end: vp767.matches ? 'center center' : 'top center',
      scrub: true,
      animation: tl
    });
  });
};
var initParallaxComponents = function initParallaxComponents() {
  fadeScaleParallax();
  transformYParallax();
};
exports.initParallaxComponents = initParallaxComponents;

},{"../../utils/page-scroller.js":38,"../../vendor/gsap/scroll-trigger.min.js":42}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScrollSlider = void 0;
var _observers = require("../../utils/observers");
var _scrollTriggerMin = require("../../vendor/gsap/scroll-trigger.min.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
// создание класса для полноэкранных секций
var ScrollSlider = /*#__PURE__*/function () {
  // базовая конфигурация класса (как параметр получает контейнер, содержащий, секции )
  function ScrollSlider(slider) {
    _classCallCheck(this, ScrollSlider);
    if (!slider) {
      return;
    }
    // задаем свойству container данные из параметра
    this.container = slider;
    // в свойство slides передаем все секции
    this.slides = this.container.querySelectorAll('[data-scroll-slider="slide"]');
    // считаем колличество секций
    this.slidesCount = this.slides.length;
    // назначаем начальный слайд
    this.currentSlide = 0;
    // инициализируем свойство под таймлайн
    this.timeline = null;
    // определяем тип устройства
    this.vpTouch = window.matchMedia('(pointer: coarse)');
    // привязка контекста ScrollSlider к методам setSlider и switchSlide
    this.setSlider = this.setSlider.bind(this);
    this.switchSlide = this.switchSlide.bind(this);
    // инициализация метода init
    this.init();
  }

  // метод switchSlide просто тоглит текущий слайд (секцию)
  _createClass(ScrollSlider, [{
    key: "switchSlide",
    value: function switchSlide(scroll) {
      if (scroll.progress === 0) {
        this.currentSlide = 0;
      } else {
        this.currentSlide = Math.ceil(scroll.progress / (1 / this.slidesCount)) - 1;
      }
      _toConsumableArray(this.slides).map(function (slide) {
        return slide.classList.remove('is-active');
      });
      this.slides[this.currentSlide].classList.add('is-active');
    }

    // метод для пересчет высоты
  }, {
    key: "updateHeight",
    value: function updateHeight() {
      this.height = this.slidesCount * window.innerHeight;
      this.container.style.minHeight = this.height + 'px';
    }

    // (сеттер) метод для конфигурирования анимации
  }, {
    key: "setSlider",
    value: function setSlider() {
      this.updateHeight();
      if (this.timeline) {
        this.timeline.kill();
        this.timeline = null;
      }
      this.timeline = gsap.timeline({
        paused: true
      });
      _scrollTriggerMin.ScrollTrigger.create({
        scroller: this.vpTouch.matches ? '.wrapper' : 'body',
        trigger: this.container,
        start: 'top top',
        end: 'bottom bottom',
        scrub: true,
        onUpdate: this.switchSlide,
        animation: this.timeline
      });
    }

    // метод инициализирующий полноэкранные секции
  }, {
    key: "init",
    value: function init() {
      this.setSlider();
      _observers.resizeObserver.subscribe(this.setSlider);
    }
  }]);
  return ScrollSlider;
}();
exports.ScrollSlider = ScrollSlider;

},{"../../utils/observers":37,"../../vendor/gsap/scroll-trigger.min.js":42}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.callbacks = void 0;
var baseSuccessCallback = function baseSuccessCallback(event) {
  event.preventDefault();
  // В данном колбеке бэкендер, либо разработчик при необходимости будет писать запрос на отправку формы на сервер и обрабатывать возможные ошибки или успешную отправку формы на сервер
};

var baseErrorCallback = function baseErrorCallback(event) {
  event.preventDefault();
  // Данный коллбек используется при необходимости выполнить какое-либо действие помимо показа ошибок при попытке отправить неккорректные данные, он не связан с запросами на сервер
};

var callbacks = {
  base: {
    // Сбросс формы
    reset: true,
    // Таймаут сброса формы
    resetTimeout: 500,
    successCallback: baseSuccessCallback,
    errorCallback: baseErrorCallback
  }
};
exports.callbacks = callbacks;

},{}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Form = void 0;
var _validator = require("./validator");
var _callback = require("./callback");
var _initPhoneInput = require("./init-phone-input");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Form = /*#__PURE__*/function () {
  function Form() {
    _classCallCheck(this, Form);
    this._validator = new _validator.Validator();
    this._initPhoneInput = _initPhoneInput.initPhoneInput;
    this._callbacks = _callback.callbacks;
    this._validState = false;
  }
  _createClass(Form, [{
    key: "_resetSelect",
    value: function _resetSelect(select) {
      var nativeSelect = select.querySelector('select');
      var activeIndex = nativeSelect.options.selectedIndex;
      var selectedOption = nativeSelect.options[activeIndex];
      var buttonText = select.querySelector('.custom-select__text');
      var selectItems = select.querySelectorAll('.custom-select__item');
      buttonText.textContent = selectedOption.textContent;
      selectItems.forEach(function (item, index) {
        if (index === activeIndex - 1) {
          item.setAttribute('aria-selected', 'true');
          return;
        }
        item.setAttribute('aria-selected', 'false');
      });
      if (!nativeSelect.value) {
        select.classList.remove('not-empty');
        select.classList.remove('is-valid');
      }
    }
  }, {
    key: "_resetSelects",
    value: function _resetSelects(form) {
      var _this = this;
      var selects = form.querySelectorAll('[data-select]');
      selects.forEach(function (select) {
        _this._resetSelect(select);
      });
    }
  }, {
    key: "reset",
    value: function reset(form) {
      var _this2 = this;
      this._validator._reset();
      var parent = form.closest('[data-form-validate]');
      form.reset();
      form.querySelectorAll('.is-invalid').forEach(function (item) {
        return item.classList.remove('is-invalid');
      });
      form.querySelectorAll('.is-valid').forEach(function (item) {
        return item.classList.remove('is-valid');
      });
      form.querySelectorAll('.input-message').forEach(function (item) {
        return item.remove();
      });
      parent.querySelectorAll('.input-message').forEach(function (item) {
        return item.remove();
      });
      setTimeout(function () {
        _this2._resetSelects(form);
      });
    }
  }, {
    key: "initPhoneInput",
    value: function initPhoneInput(parent) {
      this._initPhoneInput(parent);
    }
  }, {
    key: "validateForm",
    value: function validateForm(event) {
      return this._validator.validateForm(event);
    }
  }, {
    key: "validateFormElement",
    value: function validateFormElement(item) {
      return this._validator.validateFormElement(item);
    }
  }, {
    key: "createStates",
    value: function createStates(item) {
      return this._validator._createStates(item);
    }
  }, {
    key: "_onFormSubmit",
    value: function _onFormSubmit(event) {
      var _this3 = this;
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      this._validState = this.validateForm(event);
      if (this._validState && callback) {
        this._callbacks[callback].successCallback(event);
        if (this._callbacks[callback].reset) {
          setTimeout(function () {
            _this3.reset(event.target);
          }, this._callbacks[callback].resetTimeout ? this._callbacks[callback].resetTimeout : 500);
        }
        return;
      }
      if (!this._validState && callback) {
        this._callbacks[callback].errorCallback(event);
        return;
      }
    }
  }, {
    key: "_onFormInput",
    value: function _onFormInput(item) {
      this.validateFormElement(item);
      this.createStates(item);
    }
  }, {
    key: "_initValidate",
    value: function _initValidate(parent) {
      var _this4 = this;
      var form = parent.querySelector('form');
      if (!form) {
        return;
      }
      var phoneParents = form.querySelectorAll('[data-validate-type="phone"]');
      phoneParents.forEach(function (item) {
        return _this4._initPhoneInput(item);
      });
      var callback = parent.dataset.callback;
      form.noValidate = true;
      form.addEventListener('submit', function (event) {
        _this4._onFormSubmit(event, callback);
      });
      form.addEventListener('input', function (event) {
        _this4._onFormInput(event.target);
      });
      form.addEventListener('reset', function (event) {
        _this4.reset(event.target);
      });
    }
  }, {
    key: "init",
    value: function init() {
      var _this5 = this;
      this._validateParent = document.querySelectorAll('[data-form-validate]');
      if (!this._validateParent.length) {
        return;
      }
      this._validateParent.forEach(function (parent) {
        return _this5._initValidate(parent);
      });
    }
  }]);
  return Form;
}();
exports.Form = Form;

},{"./callback":7,"./init-phone-input":9,"./validator":13}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initPhoneInput = void 0;
var baseCountryCode = '+7';
var baseMatrix = ' (___) ___ __ __';
var phoneLength = baseCountryCode.length + baseMatrix.length;
var onPhoneInputInput = function onPhoneInputInput(e) {
  var matrix = "".concat(baseCountryCode).concat(baseMatrix);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = e.target.value.replace(/\D/g, '');
  if (def.length >= val.length) {
    val = def;
  }
  e.target.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};
var onPhoneInputFocus = function onPhoneInputFocus(_ref) {
  var target = _ref.target;
  if (!target.value) {
    target.value = baseCountryCode;
  }
  target.addEventListener('input', onPhoneInputInput);
  target.addEventListener('blur', onPhoneInputBlur);
  target.addEventListener('keydown', onPhoneInputKeydown);
  target.addEventListener('paste', onPhoneInputPaste);
  target.addEventListener('click', onPhoneInputClick);
};
var onPhoneInputClick = function onPhoneInputClick(e) {
  if (e.target.selectionStart < 4) {
    e.preventDefault();
    e.target.setSelectionRange(3, 3);
  }
};
var onPhoneInputPaste = function onPhoneInputPaste(e) {
  e.target.setSelectionRange(0, 0);
  if (!e.target.selectionStart) {
    setTimeout(function () {
      if (e.target.value.startsWith('+7')) {
        return;
      }
      if (e.target.value.startsWith('+8')) {
        e.target.value = "+7 ".concat(e.target.value.slice(3));
        return;
      }
      e.target.value = '';
    });
  }
};
var onPhoneInputKeydown = function onPhoneInputKeydown(e) {
  if (e.target.selectionStart < 4 && (e.keyCode === 37 || e.keyCode === 13)) {
    e.preventDefault();
    e.target.setSelectionRange(3, 3);
  }
};
var onPhoneInputBlur = function onPhoneInputBlur(_ref2) {
  var target = _ref2.target;
  if (target.value === baseCountryCode) {
    var parent = target.closest('[data-validate-type="phone"]');
    target.value = '';
    if (!parent.hasAttribute('data-required')) {
      parent.classList.remove('is-valid');
      parent.classList.remove('is-invalid');
      var parentMessage = parent.querySelector('.input-message');
      if (parentMessage) {
        parentMessage.remove();
      }
    }
    parent.classList.remove('not-empty');
    target.removeEventListener('input', onPhoneInputInput);
    target.removeEventListener('blur', onPhoneInputBlur);
    target.removeEventListener('keydown', onPhoneInputKeydown);
    target.removeEventListener('paste', onPhoneInputPaste);
    target.removeEventListener('click', onPhoneInputClick);
  }
};
var initPhoneInput = function initPhoneInput(parent) {
  var input = parent.querySelector('input');
  parent.dataset.phoneLength = phoneLength;
  input.addEventListener('focus', onPhoneInputFocus);
};
exports.initPhoneInput = initPhoneInput;

},{}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matrixReplace = void 0;
var matrixReplace = function matrixReplace(item, matrix, RegEx) {
  if (!matrix) {
    // eslint-disable-next-line no-console
    console.error('При валидации по матрице обязательно указывать формат матрицы: data-matrix=""');
    item.value = '';
    return;
  }
  if (!RegEx) {
    // eslint-disable-next-line no-console
    console.error('При валидации по матрице обязательно указывать формат ограничений: data-matrix-limitations=""');
    item.value = '';
    return;
  }
  var def = matrix.replace(RegEx, '');
  var val = item.value.replace(RegEx, '');
  var i = 0;
  if (def.length >= val.length) {
    val = def;
  }
  item.value = matrix.replace(/./g, function (a) {
    if (/[_\^]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};
exports.matrixReplace = matrixReplace;

},{}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMatrixLimitationsRegEx = exports.getMailRegEx = exports.getLimitationsRegEx = void 0;
var setLimitationError = function setLimitationError(limitation) {
  // eslint-disable-next-line no-console
  console.error("\u041F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F(data-limitation=\"".concat(limitation, "\") - \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439."));
};
var getLimitationsRegEx = function getLimitationsRegEx(limitation) {
  switch (limitation) {
    case 'digit':
      return /[^\d]/g;
    case 'name':
      return /[^a-zA-Zа-яёА-ЯЁ\-\s]/g;
    case 'letters':
      return /[^a-zA-Zа-яёА-ЯЁ\s]/g;
    case 'letters-and-digit':
      return /[^a-zA-Zа-яёА-ЯЁ\s\d]/g;
    case 'cyrillic':
      return /[^а-яёА-ЯЁ\s]/g;
    case 'latin':
      return /[^a-zA-Z\s]/g;
    default:
      return setLimitationError(limitation);
  }
};
exports.getLimitationsRegEx = getLimitationsRegEx;
var getMatrixLimitationsRegEx = function getMatrixLimitationsRegEx(matrix) {
  switch (matrix) {
    case 'digit':
      return /[^\d]/g;
    case 'name':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\-]]/g;
    case 'letters':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z]/g;
    case 'letters-and-digit':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\d]/g;
    case 'cyrillic':
      return /[^\а-яё\А-ЯЁ]/g;
    case 'latin':
      return /[^\a-z\A-Z]/g;
    default:
      return false;
  }
};
exports.getMatrixLimitationsRegEx = getMatrixLimitationsRegEx;
var getMailRegEx = function getMailRegEx() {
  return /[a-zA-Zа-яёА-ЯЁ0-9]{1}([a-zA-Zа-яёА-ЯЁ0-9\-_\.]{1,})?@[a-zA-Zа-яёА-ЯЁ0-9\-]{1}([a-zA-Zа-яёА-ЯЁ0-9.\-]{1,})?[a-zA-Zа-яёА-ЯЁ0-9\-]{1}\.[a-zA-Zа-яёА-ЯЁ]{2,6}/;
};
exports.getMailRegEx = getMailRegEx;

},{}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Message = void 0;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Message = /*#__PURE__*/function () {
  function Message() {
    _classCallCheck(this, Message);
    this._baseErrorText = 'Это поле является обязательным';
  }
  _createClass(Message, [{
    key: "_messageTemplate",
    value: function _messageTemplate(message, state) {
      var cssClass = state === 'valid' ? 'is-valid' : 'is-invalid';
      return "<span class=\"input-message ".concat(cssClass, "\">").concat(message, "</span>");
    }
  }, {
    key: "removeMessage",
    value: function removeMessage(parent) {
      var parentMessage = parent.querySelector('.input-message');
      if (parentMessage) {
        parentMessage.remove();
      }
    }
  }, {
    key: "renderMessage",
    value: function renderMessage(parent, message, state) {
      this.removeMessage(parent);
      parent.insertAdjacentHTML('beforeend', this._messageTemplate(message, state));
    }
  }]);
  return Message;
}();
exports.Message = Message;

},{}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Validator = void 0;
var _regularExpression = require("./regular-expression");
var _matrix = require("./matrix");
var _renderMessage2 = require("./render-message");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Validator = /*#__PURE__*/function () {
  function Validator() {
    _classCallCheck(this, Validator);
    this._getLimitationsRegEx = _regularExpression.getLimitationsRegEx;
    this._getMatrixLimitationsRegEx = _regularExpression.getMatrixLimitationsRegEx;
    this._getMailRegEx = _regularExpression.getMailRegEx;
    this._matrixReplace = _matrix.matrixReplace;
    this._message = new _renderMessage2.Message();
    this._invalidNotEmpty = false;
    this._validState = true;
    this._submitEvent = false;
  }
  _createClass(Validator, [{
    key: "_createStates",
    value: function _createStates(item) {
      var _this = this;
      this._validState = true;
      this._invalidNotEmpty = false;
      var parent = item.closest('[data-form-validate]');
      var formElements = parent.querySelectorAll('input', 'select', 'textarea');
      formElements.forEach(function (element) {
        if (element.getAttribute('aria-invalid') === 'true') {
          _this._validState = false;
          if (element.value) {
            _this._invalidNotEmpty = true;
          }
        }
      });
      this._validateFormParent(parent);
    }
  }, {
    key: "_renderMessage",
    value: function _renderMessage(trigger, parent, input) {
      if (!parent.hasAttribute('data-required') && !input.value) {
        return;
      }
      if (!trigger) {
        parent.classList.add('is-invalid');
        if (parent.hasAttribute('data-message-base') && !input.value) {
          this._message.renderMessage(parent, parent.dataset.messageBase, 'invalid');
        } else if (parent.hasAttribute('data-message-extra') && input.value) {
          this._message.renderMessage(parent, parent.dataset.messageExtra, 'invalid');
        } else if (!parent.hasAttribute('data-message-extra') && parent.hasAttribute('data-message-base') && input.value) {
          this._message.renderMessage(parent, parent.dataset.messageBase, 'invalid');
        } else {
          this._message.removeMessage(parent);
        }
      } else {
        if (parent.hasAttribute('data-message-success')) {
          this._message.renderMessage(parent, parent.dataset.messageSuccess, 'valid');
        } else {
          this._message.removeMessage(parent);
        }
      }
    }
  }, {
    key: "_setItemValidState",
    value: function _setItemValidState(parent, input) {
      if (!parent.hasAttribute('data-required') && !input.value) {
        return;
      }
      parent.classList.add('is-valid');
      parent.classList.remove('is-invalid');
      input.setAttribute('aria-invalid', 'false');
      this._message.removeMessage(parent);
    }
  }, {
    key: "_setItemInvalidState",
    value: function _setItemInvalidState(parent, input) {
      if (!parent.hasAttribute('data-required') && !input.value) {
        return;
      }
      parent.classList.remove('is-valid');
      input.setAttribute('aria-invalid', 'true');
    }
  }, {
    key: "_simpleLimitation",
    value: function _simpleLimitation(item, limitation) {
      item.value = item.value.replace(this._getLimitationsRegEx(limitation), '');
    }
  }, {
    key: "_matrixLimitation",
    value: function _matrixLimitation(item, matrix, limitation) {
      this._matrixReplace(item, matrix, limitation);
    }
  }, {
    key: "_validateTextInput",
    value: function _validateTextInput(parent, input) {
      var flag = true;
      if (input.value.length >= (+input.getAttribute('minlength') || 1)) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateMatrixInput",
    value: function _validateMatrixInput(parent, input) {
      var flag = true;
      if (input.value.length === input.closest('[data-matrix]').dataset.matrix.length) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateEmailInput",
    value: function _validateEmailInput(parent, input) {
      var flag = true;
      if (new RegExp(this._getMailRegEx(), '').test(input.value)) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validatePhoneInput",
    value: function _validatePhoneInput(parent, input) {
      var flag = true;
      if (input.value.length >= +parent.dataset.phoneLength) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateCheckbox",
    value: function _validateCheckbox(parent, input) {
      var flag = true;
      if (input.checked) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_findSelectedOption",
    value: function _findSelectedOption(options) {
      var flag = false;
      options.forEach(function (option) {
        if (option.value && option.selected) {
          flag = true;
        }
      });
      return flag;
    }
  }, {
    key: "_validateSelect",
    value: function _validateSelect(parent, input) {
      var options = input.querySelectorAll('option');
      var customSelectText = parent.querySelector('.custom-select__text');
      input.setAttribute('aria-invalid', 'false');
      var flag = true;
      if (this._findSelectedOption(options)) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        parent.classList.remove('not-empty');
        customSelectText.innerHTML = '';
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_returnCheckedElements",
    value: function _returnCheckedElements(inputs) {
      var flag = false;
      inputs.forEach(function (input) {
        if (input.checked) {
          flag = true;
        }
      });
      return flag;
    }
  }, {
    key: "_removeGroupAria",
    value: function _removeGroupAria(inputs) {
      inputs.forEach(function (input) {
        if (!input.checked) {
          input.removeAttribute('aria-required');
          input.removeAttribute('aria-invalid');
        } else {
          input.setAttribute('aria-required', true);
          input.setAttribute('aria-invalid', false);
        }
      });
    }
  }, {
    key: "_setGroupAria",
    value: function _setGroupAria(inputs) {
      inputs.forEach(function (input) {
        input.setAttribute('aria-required', true);
        input.setAttribute('aria-invalid', true);
      });
    }
  }, {
    key: "_validateToggleGroup",
    value: function _validateToggleGroup(parent) {
      var formElements = parent.querySelectorAll('input');
      var flag = true;
      if (this._returnCheckedElements(formElements)) {
        this._removeGroupAria(formElements);
        parent.classList.remove('is-invalid');
        parent.classList.add('is-valid');
        this._message.removeMessage(parent);
      } else {
        this._setGroupAria(formElements);
        parent.classList.remove('is-valid');
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_customExample",
    value: function _customExample(parent, input) {
      var flag = true;
      if (!input.value.length) {
        parent.dataset.messageBase = 'Поле обязательно к заполнению';
        this._setItemInvalidState(parent, input);
        flag = false;
      } else if (input.value.length < input.minLength) {
        parent.dataset.messageBase = "\u041E\u0441\u0442\u0430\u043B\u043E\u0441\u044C \u0432\u0432\u0435\u0441\u0442\u0438 \u0435\u0449\u0451 ".concat(input.minLength - input.value.length, " \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432");
        this._setItemInvalidState(parent, input);
        flag = false;
      } else if (input.value.length > input.minLength) {
        parent.dataset.messageBase = "\u0412\u044B \u0432\u0432\u0435\u043B\u0438 ".concat(input.value.length - input.minLength, " \u043B\u0438\u0448\u043D\u0438\u0445 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432");
        this._setItemInvalidState(parent, input);
        flag = false;
      } else {
        parent.dataset.messageSuccess = 'Поле заполнено корректно';
        this._setItemValidState(parent, input);
        flag = true;
      }
      return flag;
    }
  }, {
    key: "_validateFile",
    value: function _validateFile(parent, input) {
      var flag = true;
      var sizeTest = parent.dataset.maxSize && input.files[0] ? input.files[0].size < +parent.dataset.maxSize : true;
      if (input.value && sizeTest) {
        this._setItemValidState(parent, input);
      } else {
        this._setItemInvalidState(parent, input);
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_customUpload",
    value: function _customUpload(parent, input) {
      var flag = true;
      if (parent.classList.contains('is-invalid') || !input.files[0]) {
        flag = false;
      }
      return flag;
    }
  }, {
    key: "_validateInput",
    value: function _validateInput(type, parent, input) {
      switch (type) {
        case 'text':
          return this._validateTextInput(parent, input);
        case 'matrix':
          return this._validateMatrixInput(parent, input);
        case 'email':
          return this._validateEmailInput(parent, input);
        case 'phone':
          return this._validatePhoneInput(parent, input);
        case 'checkbox':
          return this._validateCheckbox(parent, input);
        case 'select':
          return this._validateSelect(parent, input);
        case 'toggle-group':
          return this._validateToggleGroup(parent, input);
        case 'file':
          return this._validateFile(parent, input);
        case 'custom-upload':
          return this._customUpload(parent, input);
        case 'custom-example':
          return this._customExample(parent, input);
        default:
          return false;
      }
    }
  }, {
    key: "_baseParentValidate",
    value: function _baseParentValidate(formParent) {
      if (!this._submitEvent) {
        return;
      }
      if (!this._invalidNotEmpty && !this._validState) {
        this._message.renderMessage(formParent, formParent.dataset.messageBase, 'invalid');
        return;
      }
      if (this._invalidNotEmpty && !this._validState) {
        this._message.renderMessage(formParent, formParent.dataset.messageExtra || formParent.dataset.messageBase, 'invalid');
        return;
      }
      if (this._validState) {
        this._message.removeMessage(formParent);
        return;
      }
    }
  }, {
    key: "_validateParent",
    value: function _validateParent(formParent, type) {
      switch (type) {
        case 'base':
          return this._baseParentValidate(formParent);
        default:
          return false;
      }
    }
  }, {
    key: "validateFormElement",
    value: function validateFormElement(formElement) {
      var fullValidate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var parent = formElement.closest('[data-validate-type]');
      if (!parent) {
        return;
      }
      if (!parent.hasAttribute('data-required')) {
        var removeElement = parent.querySelector('input') || parent.querySelector('select') || parent.querySelector('textarea');
        if (!removeElement.value) {
          parent.classList.remove('is-valid');
          parent.classList.remove('is-invalid');
        }
      }
      var onInputValidate = parent.hasAttribute('data-on-input-validate');
      if (parent.hasAttribute('data-limitation')) {
        this._simpleLimitation(formElement, parent.dataset.limitation);
      }
      if (parent.dataset.validateType === 'matrix') {
        this._matrixLimitation(formElement, parent.dataset.matrix, this._getMatrixLimitationsRegEx(parent.dataset.matrixLimitation));
      }
      var isValid = this._validateInput(parent.dataset.validateType, parent, formElement);
      if (onInputValidate || fullValidate) {
        this._renderMessage(isValid, parent, formElement);
      }
    }
  }, {
    key: "_fullValidate",
    value: function _fullValidate(items) {
      var _this2 = this;
      var isValid = true;
      items.forEach(function (item) {
        var formElement = item.querySelector('input') || item.querySelector('select') || item.querySelector('textarea');
        _this2.validateFormElement(formElement, true);
        if (item.classList.contains('is-invalid')) {
          isValid = false;
        }
      });
      return isValid;
    }
  }, {
    key: "validateForm",
    value: function validateForm(event) {
      if (event.type === 'submit') {
        this._submitEvent = true;
      }
      var validateItems = event.target.querySelectorAll('[data-validate-type]');
      var result = this._fullValidate(validateItems);
      this._createStates(event.target);
      return result;
    }
  }, {
    key: "_reset",
    value: function _reset() {
      this._submitEvent = false;
    }
  }, {
    key: "_validateFormParent",
    value: function _validateFormParent(element) {
      var formParent = element.closest('[data-form-validate]');
      if (formParent.dataset.parentValidate) {
        this._validateParent(formParent, formParent.dataset.parentValidate);
      }
    }
  }]);
  return Validator;
}();
exports.Validator = Validator;

},{"./matrix":10,"./regular-expression":11,"./render-message":12}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initHeaderModules = void 0;
var _observers = require("../../utils/observers.js");
var _setHeaderHeight = require("./set-header-height.js");
var _toggleMenu = require("./toggle-menu.js");
var initHeaderModules = function initHeaderModules() {
  _observers.resizeObserver.subscribe(_setHeaderHeight.setHeaderHeight);
  (0, _toggleMenu.initToggleMenu)();
};
exports.initHeaderModules = initHeaderModules;

},{"../../utils/observers.js":37,"./set-header-height.js":15,"./toggle-menu.js":16}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setHeaderHeight = void 0;
var setHeaderHeight = function setHeaderHeight() {
  var header = document.querySelector('.header');
  if (!header) {
    return;
  }
  var headerRect = header.getBoundingClientRect();
  document.documentElement.style.setProperty('--header-height', headerRect.height + 'px');
};
exports.setHeaderHeight = setHeaderHeight;

},{}],16:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initToggleMenu = void 0;
var _observers = require("../../utils/observers.js");
var isMenuOpen = false;
var menuElements = {
  header: document.querySelector('.header'),
  menuToggle: document.querySelector('[data-menu="toggle"]'),
  menuNav: document.querySelector('[data-menu="nav"]')
};
var closeMenu = function closeMenu() {
  menuElements.menuNav.classList.remove('is-active');
  menuElements.menuToggle.classList.remove('is-active');
  menuElements.header.classList.remove('menu-opened');
  window.scrollLock.enableScrolling();
  isMenuOpen = false;
  _observers.keyObserver.unsubscribe(escPressHandler);
};
var openMenu = function openMenu() {
  menuElements.menuNav.classList.add('is-active');
  menuElements.menuToggle.classList.add('is-active');
  menuElements.header.classList.add('menu-opened');
  window.scrollLock.disableScrolling();
  isMenuOpen = true;
  _observers.keyObserver.subscribe(escPressHandler);
};
var toggleMenu = function toggleMenu(evt) {
  var target = evt.target;
  var menuToggle = target.closest('[data-menu="toggle"]');
  if (!menuToggle || !menuElements.menuNav) {
    return;
  }
  if (isMenuOpen) {
    closeMenu();
  } else {
    openMenu();
  }
};
var escPressHandler = function escPressHandler(evt) {
  if (evt.key === 'Escape') {
    closeMenu();
  }
};
var initToggleMenu = function initToggleMenu() {
  if (!menuElements.menuNav || !menuElements.menuToggle) {
    return;
  }
  _observers.clickObserver.subscribe(toggleMenu);
};
exports.initToggleMenu = initToggleMenu;

},{"../../utils/observers.js":37}],17:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initScrollTo = void 0;
var _scrollToPlugin = require("./../vendor/gsap/scroll-to-plugin");
var _pageScroller = require("../utils/page-scroller.js");
var _observers = require("../utils/observers.js");
var scrollToHandler = function scrollToHandler(e) {
  var btn = e.target.closest('[data-move-to]');
  if (!btn) {
    return;
  }
  e.preventDefault();
  var target = document.querySelector(btn.dataset.moveTo);
  var options = {
    duration: Math.abs(btn.getBoundingClientRect().top - target.getBoundingClientRect().top) / (window.innerHeight * 1.5),
    offset: 0
  };
  gsap.to(_pageScroller.pageScroller === 'body' ? window : _pageScroller.pageScroller, options.duration, {
    scrollTo: {
      y: target,
      offsetY: options.offset
    },
    ease: 'power4.out'
  });
};
var initScrollTo = function initScrollTo() {
  gsap.registerPlugin(_scrollToPlugin.ScrollToPlugin);
  if (!document.querySelector('[data-move-to]')) {
    return;
  }
  _observers.clickObserver.subscribe(scrollToHandler);
};
exports.initScrollTo = initScrollTo;

},{"../utils/observers.js":37,"../utils/page-scroller.js":38,"./../vendor/gsap/scroll-to-plugin":41}],18:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Loader = void 0;
var _scrollLock = require("../utils/scroll-lock");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Loader = /*#__PURE__*/function () {
  function Loader() {
    _classCallCheck(this, Loader);
    this.container = document.querySelector('[data-loader="container"]');
    if (!this.container) {
      return;
    }
    this.box = this.container.querySelector('[data-loader="box"]');
    this.animateIntro = document.querySelector('[data-animate="intro"]');
    this.scrollLock = new _scrollLock.ScrollLock();
    this.event = new Event('loaderOff');

    // привязка контекста к экземпляру класса

    this.off = this.off.bind(this);
    this.hide = this.hide.bind(this);
    this.init();
  }
  _createClass(Loader, [{
    key: "hide",
    value: function hide() {
      this.hideTimeline = gsap.timeline();
      this.hideTimeline.fromTo(this.container, {
        clipPath: 'polygon(0% 0%, 100% 0%, 100% 100%, 0% 110%)'
      }, {
        duration: 0.6,
        clipPath: 'polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)'
      });
      this.hideTimeline.then(this.off);
    }
  }, {
    key: "on",
    value: function on() {
      window.addEventListener('load', this.hide);
    }
  }, {
    key: "off",
    value: function off() {
      document.querySelector('body').classList.remove('scroll-lock-ios');
      this.container.classList.add('is-hidden');
      window.dispatchEvent(this.event);
      if (this.animateIntro) {
        this.animateIntro.classList.add('is-shown');
      }
    }
  }, {
    key: "init",
    value: function init() {
      this.on();
    }
  }]);
  return Loader;
}();
exports.Loader = Loader;

},{"../utils/scroll-lock":40}],19:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initClustersPins = void 0;
var initClustersPins = function initClustersPins(mapBlock, ymap) {
  // массив под кластер
  var pinsArray = [];
  ymap.geoObjects.each(function (geoObject) {
    var pinType = geoObject.options.get('placemarkType');
    if (pinType !== 'mainPin') {
      // групируем пины
      pinsArray.push(geoObject);
    }
  });

  // темплейт всплывашки кластера
  var customItemContentLayout = ymaps.templateLayoutFactory.createClass("<div class=\"cluster-balloon\">\n          <div class=\"cluster-balloon__image\">\n            <img src=\"$[properties.imagePath]\" width=\"101\" height=\"94\" alt=\"$[properties.imageAlt]\">\n          </div>\n          <div class=\"cluster-balloon__wrap\">\n            <p class=\"cluster-balloon__head\">$[properties.textHead]</p>\n            <p class=\"cluster-balloon__title\">$[properties.title]</p>\n            <p class=\"cluster-balloon__text {% if properties.textLeft %} cluster-balloon__text--right-text {% endif %}\">\n              {% if properties.text %}\n                {% if properties.linkHref %}\n                  <a href=\"$[properties.linkHref]\">$[properties.text]</a>\n                {% else %}\n                  <span>$[properties.text]</span>\n                {% endif %}\n              {% endif %}\n              {% if properties.textRight %}\n                <span class=\"right\">$[properties.textRight]</span>\n              {% endif %}\n            </p>\n          </div>\n        </div>");

  // конфигурируем кластер
  var clusterer = new ymaps.Clusterer({
    gridSize: 12800,
    preset: 'islands#brownClusterIcons',
    hasBalloon: true,
    // hasHint: true, позволяет выводить подсказки при наведении на пин
    clusterDisableClickZoom: true,
    clusterOpenBalloonOnClick: true,
    // Устанавливаем стандартный макет балуна кластера "Карусель".
    clusterBalloonContentLayout: 'cluster#balloonCarousel',
    clusterBalloonItemContentLayout: customItemContentLayout,
    clusterBalloonPanelMaxMapArea: 0,
    clusterBalloonContentLayoutWidth: 300,
    clusterBalloonContentLayoutHeight: 180,
    clusterBalloonPagerSize: 5,
    // максимум слайдов
    clusterBalloonPagerType: 'marker'
  });

  // добавляем в кластер пины из массива
  clusterer.add(pinsArray);
  //добавляем кластер на карту
  ymap.geoObjects.add(clusterer);

  // задаем зависимость кластеризации от зума
  ymap.setBounds(clusterer.getBounds(), {
    checkZoomRange: true
  });
};
exports.initClustersPins = initClustersPins;

},{}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initMapFilter = void 0;
var initMapFilter = function initMapFilter(mapBlock) {
  var list = document.querySelector('.map-filter');
  var getMapFilter = function getMapFilter(element) {
    // получаем набор данных из geoObjects
    var allPins = ymaps.geoQuery(mapBlock.geoObjects);
    if (element === 'all') {
      allPins.each(function (pm) {
        pm.options.set('visible', true);
      });
      return;
    }
    var arr = [];

    // проходимся по всем пинам, скрываем что необходимо
    allPins.each(function (pm) {
      if (pm.options.get('placemarkType') === element) {
        pm.options.set('visible', true);
        arr.push(pm.balloon.isOpen()); // проверка на открытый попап
      } else {
        pm.options.set('visible', false);
      }
      if (pm.options.get('placemarkType') === 'mainPin') {
        pm.options.set('visible', true);
      }
    });
    if (!arr.includes(true)) {
      mapBlock.balloon.close(); // если есть открытый попап не соответствующий фильтру то закрывает его
    }
  };

  list.addEventListener('change', function (evt) {
    evt.preventDefault();
    var target = evt.target.value;
    if (!target) {
      return;
    }
    getMapFilter(target);
  });
};
exports.initMapFilter = initMapFilter;

},{}],21:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initMapPin = void 0;
var pinSize;
var offsetPin;
var pinContentLayout;

// темплейт дефолтного пина
var renderDefaultPin = function renderDefaultPin() {
  pinSize = [90, 108];
  offsetPin = [-45, -120];
  pinContentLayout = "\n    <div class=\"map-pin\">\n      <div class=\"map-pin__logo\">\n        <svg width=\"90\" height=\"108\" aria-hidden=\"true\">\n          <use xlink:href=\"#icon-dino-pin\"></use>\n        </svg>\n      </div>\n    </div>\n  ";
};

// темплейт маленького пина
var renderSmallPin = function renderSmallPin() {
  pinSize = [50, 60];
  offsetPin = [-25, -75];
  pinContentLayout = "\n    <div class=\"map-pin\">\n      <div class=\"map-pin__logo\">\n        <svg width=\"50\" height=\"60\" aria-hidden=\"true\">\n          <use xlink:href=\"#icon-dino-pin\"></use>\n        </svg>\n      </div>\n    </div>\n  ";
};
var initMapPin = function initMapPin(mapBlock, ymap, pin) {
  var placeCords = mapBlock.dataset.center.split(',');

  // определяем какой пин отображать
  switch (pin) {
    case 'small':
      renderSmallPin();
      break;
    default:
      renderDefaultPin();
      break;
  }

  // Блок с меткой
  // eslint-disable-next-line no-undef
  // добавляем в templateLayoutFactory наши шаблоны
  var MyPlacemarkContentLayout = window.ymaps.templateLayoutFactory.createClass(pinContentLayout);

  // eslint-disable-next-line no-undef
  var myPlacemark = new window.ymaps.Placemark(placeCords, null, {
    // Опции.
    // Для меток с содержимым
    placemarkType: 'mainPin',
    iconLayout: 'default#imageWithContent',
    // Прячет стандартую иконку
    iconImageHref: '',
    // Размеры метки с содержимым
    iconContentSize: pinSize,
    // Смещение от точки привязки (левого верхнего угла) до ножки
    iconContentOffset: offsetPin,
    iconContentLayout: MyPlacemarkContentLayout,
    zIndex: 700
  });

  // теперь результаты добавляем на карту
  ymap.geoObjects.add(myPlacemark);
};
exports.initMapPin = initMapPin;

},{}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initCategoryPins = void 0;
var _fetch = require("../../utils/fetch.js");
var _initMapClusters = require("./init-map-clusters.js");
var initCategoryPins = function initCategoryPins(mapBlock, ymap) {
  var requestURL = mapBlock.dataset.markersUrl;
  var renderPins = function renderPins(data) {
    // Создаём макет содержимого.
    // data-map-marker="$[properties.category]"> обращаемся к свойству category в JSON
    // eslint-disable-next-line no-undef
    // темплейт пина
    var MyIconContentLayout = ymaps.templateLayoutFactory.createClass("<div class=\"placemark\" data-placemark tabindex=\"0\" data-map-marker=\"$[properties.category]\">\n            <div class=\"placemark__inner\">\n              <div class=\"placemark__icon\">\n                <svg width=\"40\" height=\"40\" aria-hidden=\"true\">\n                  <use xlink:href=\"#$[properties.icon]\"></use>\n                </svg>\n              </div>\n            </div>\n          </div>");

    // eslint-disable-next-line no-undef
    // темплейт сообщения
    var MyBalloonLayout = ymaps.templateLayoutFactory.createClass("<div class=\"placemark-balloon\">\n          $[[options.contentLayout]]\n        </div>", {
      // метод возвращающий результат шаблонизации
      build: function build() {
        this.constructor.superclass.build.call(this);
        this._$parent = this.getParentElement();
        this._$element = this._$parent.querySelector('.placemark-balloon');
        this._$closeBtn = this._$element.querySelector('.placemark-balloon__close-btn');
        this.closeBtnCallback = window.ymaps.util.bind(this.onCloseClick, this);
        this._$closeBtn.addEventListener('click', this.closeBtnCallback);
        mapBlock.addEventListener('closeBalloon', this.closeBtnCallback);
      },
      onCloseClick: function onCloseClick(evt) {
        evt.preventDefault();
        ymap.balloon.close();
      }
    });

    // eslint-disable-next-line no-undef
    // темплейт всплывашки
    var MyBalloonContentLayout = ymaps.templateLayoutFactory.createClass("<div class=\"placemark-balloon__inner\">\n          {% if properties.imagePath %}\n            <div class=\"placemark-balloon__image\">\n              <img src=\"$[properties.imagePath]\" width=\"101\" height=\"94\" alt=\"$[properties.imageAlt]\">\n            </div>\n          {% endif %}\n          <div class=\"placemark-balloon__wrap\">\n            <p class=\"placemark-balloon__head\">$[properties.textHead]</p>\n            <p class=\"placemark-balloon__title\">$[properties.title]</p>\n            <p class=\"placemark-balloon__text {% if properties.textLeft %} placemark-balloon__text--right-text {% endif %}\">\n              {% if properties.text %}\n                {% if properties.linkHref %}\n                  <a href=\"$[properties.linkHref]\">$[properties.text]</a>\n                {% else %}\n                  <span>$[properties.text]</span>\n                {% endif %}\n              {% endif %}\n              {% if properties.textRight %}\n                <span class=\"right\">$[properties.textRight]</span>\n              {% endif %}\n            </p>\n          </div>\n          <button class=\"placemark-balloon__close-btn\" type=\"button\">\n            <svg width=\"12\" height=\"12\" aria-hidden=\"true\">\n              <use xlink:href=\"#icon-close\"></use>\n            </svg>\n          </button>\n        </div>");
    data.forEach(function (obj) {
      // eslint-disable-next-line no-undef
      var markers = new ymaps.Placemark(obj.latLng, {
        textHead: obj.textHead,
        title: obj.title,
        text: obj.text,
        textRight: obj.textRight,
        linkHref: obj.linkHref,
        imagePath: obj.imagePath,
        imageAlt: obj.imageAlt,
        category: obj.category,
        icon: obj.icon
      }, {
        // Опции.
        // Необходимо указать данный тип макета.
        iconLayout: 'default#imageWithContent',
        // Своё изображение иконки метки.
        iconImageHref: '',
        // Размеры метки.
        iconImageSize: [48, 48],
        // Смещение левого верхнего угла иконки относительно`
        // её "ножки" (точки привязки).
        iconImageOffset: [-24, -24],
        // Смещение слоя с содержимым относительно слоя с картинкой.
        // iconContentOffset: [15, 15],

        // Макет содержимого.
        placemarkType: obj.category,
        iconContentLayout: MyIconContentLayout,
        balloonLayout: MyBalloonLayout,
        balloonContentLayout: MyBalloonContentLayout,
        balloonPanelMaxMapArea: 0,
        // Не скрываем иконку при открытом балуне.
        hideIconOnBalloonOpen: false,
        balloonOffset: [0, -126]
      });
      ymap.geoObjects.add(markers);
    });
    if (mapBlock.dataset.cluster) {
      (0, _initMapClusters.initClustersPins)(mapBlock, ymap);
    }
  };
  var onSuccess = function onSuccess(data) {
    // получаем маркеры с параметрами из json
    var mapMarkers = data.mapMarkers;
    renderPins(mapMarkers);
  };

  // запускаем фетч
  (0, _fetch.fetchApi)(requestURL, onSuccess);
};
exports.initCategoryPins = initCategoryPins;

},{"../../utils/fetch.js":33,"./init-map-clusters.js":19}],23:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initZoomMap = void 0;
// import {scroll} from '../animation/init-loco-scroll';

var mediaPoint = matchMedia('(max-width: 767px)');

//функция инициализации управления зумом на карте
var initZoomMap = function initZoomMap(ymap) {
  var messageBlock = document.querySelector('.ya-map__message');
  if (!messageBlock) {
    return;
  }
  var CTRL_KEY = 'Control';
  var TIMEOUT = 1500;
  var isCtrlKeyDown;
  var isCtrlMessageVisible;
  var timer;
  var showMessageBlock = function showMessageBlock() {
    messageBlock.classList.add('is-active');
    isCtrlMessageVisible = true;
    clearTimeout(timer); // сбрасываем таймер(чтобы таймеры не стакались)
    // убираем сообщение по таймеру
    timer = setTimeout(hiddenMessageBlock, TIMEOUT);
  };

  // функция, скрывающая сообщение о зуме
  var hiddenMessageBlock = function hiddenMessageBlock() {
    if (isCtrlMessageVisible) {
      messageBlock.classList.remove('is-active');
      isCtrlMessageVisible = false;
    }
  };

  // хендлер нажатия на кнопку мыши
  var hiddenMessageBlockOnMousedown = function hiddenMessageBlockOnMousedown() {
    hiddenMessageBlock();
  };

  // хендлер нажатия на кнопку контрол
  var enableScrollMapZoomOnKeydown = function enableScrollMapZoomOnKeydown(evt) {
    if (evt.key === CTRL_KEY && !isCtrlKeyDown) {
      isCtrlKeyDown = true;
      ymap.behaviors.enable('scrollZoom');
      // scroll.stop();
      hiddenMessageBlockOnMousedown();
    }
  };

  // хенделер отжатия кнопки контрол
  var disableScrollMapZoomOnKeyup = function disableScrollMapZoomOnKeyup(evt) {
    if (evt.key === CTRL_KEY) {
      isCtrlKeyDown = false;
      ymap.behaviors.disable('scrollZoom');
      // scroll.start();
    }
  };

  // хендлер колеса мыши
  var onMapWheel = function onMapWheel() {
    if (!isCtrlKeyDown) {
      // если не нажат контрол показываем сообщение, с предупреждением
      showMessageBlock();
    } else {
      // если нажат контрол скрываем сообщение, с предупреждением
      hiddenMessageBlock();
    }
  };
  var breakpointChecker = function breakpointChecker() {
    if (!mediaPoint.matches) {
      document.addEventListener('keydown', enableScrollMapZoomOnKeydown);
      document.addEventListener('keyup', disableScrollMapZoomOnKeyup);
      messageBlock.addEventListener('mousedown', hiddenMessageBlockOnMousedown);
      messageBlock.addEventListener('wheel', onMapWheel);
      // добавляем событие колеса мыши (включаем зум)
      ymap.events.add('wheel', onMapWheel);
    } else {
      document.removeEventListener('keydown', enableScrollMapZoomOnKeydown);
      document.removeEventListener('keyup', disableScrollMapZoomOnKeyup);
      messageBlock.removeEventListener('mousedown', hiddenMessageBlockOnMousedown);
      messageBlock.removeEventListener('wheel', onMapWheel);
      // удаляем событие колеса мыши (отключаем зум)
      ymap.events.remove('wheel', onMapWheel);
    }
  };
  breakpointChecker();
  mediaPoint.addListener(breakpointChecker);
};
exports.initZoomMap = initZoomMap;

},{}],24:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initMaps = void 0;
var _map = require("./map-1.js");
var _map2 = require("./map-2.js");
var _map3 = require("./map-3.js");
var _map4 = require("./map-4.js");
//дефолтная конфигурация карты(если не будут передан особый параметр из дата-атрибута data-map)
var initDefaultMap = function initDefaultMap(mapBlock) {
  // eslint-disable-next-line
  window.ymaps.ready(function () {
    // eslint-disable-next-line
    var myMap = new window.ymaps.Map(mapBlock, {
      center: [55.755819, 37.617644],
      zoom: 15,
      behaviors: ['drag', 'multiTouch']
    }, {
      suppressMapOpenBlock: true,
      searchControlProvider: 'yandex#search'
    });
  });
};

//запускает инициализацию карты в соответствии с параметром из дата-атрибута data-map
var initSetupMap = function initSetupMap(mapId, mapBlock) {
  switch (mapId) {
    case 'map-4':
      (0, _map4.initMap4)(mapBlock);
      break;
    case 'map-3':
      (0, _map3.initMap3)(mapBlock);
      break;
    case 'map-2':
      (0, _map2.initMap2)(mapBlock);
      break;
    case 'map-1':
      (0, _map.initMap1)(mapBlock);
      break;
    default:
      initDefaultMap(mapBlock);
  }
};
var initMaps = function initMaps() {
  var mapBlocks = document.querySelectorAll('.ya-map__map');
  if (!mapBlocks.length) {
    return;
  }
  mapBlocks.forEach(function (mapBlock) {
    var mapId = mapBlock.dataset.map;
    initSetupMap(mapId, mapBlock);
  });
};
exports.initMaps = initMaps;

},{"./map-1.js":25,"./map-2.js":26,"./map-3.js":27,"./map-4.js":28}],25:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initMap1 = void 0;
var _initMapPin = require("./init-map-pin.js");
var initMap1 = function initMap1(mapBlock) {
  //координаты
  var center = mapBlock.dataset.center.split(', ').map(function (str) {
    return +str;
  });
  //начальный зум
  var zoom = +mapBlock.dataset.zoom;
  //элементы управления картой
  var controls = mapBlock.dataset.controls ? mapBlock.dataset.controls.split(' ') : [];
  //параметры взаимодействия с картой
  var behaviorsMap = ['drag', 'multiTouch'];
  // задаем конфигурацию карты
  window.ymaps.ready(function () {
    var myMap = new ymaps.Map(mapBlock, {
      center: center,
      zoom: zoom,
      controls: controls,
      behaviors: behaviorsMap
    }, {
      //отслеживание размера контейнера (для масштабирования самой карты внутри)
      autoFitToViewport: 'always'
    });
    (0, _initMapPin.initMapPin)(mapBlock, myMap);
  });
};
exports.initMap1 = initMap1;

},{"./init-map-pin.js":21}],26:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initMap2 = void 0;
var _initMapPin = require("./init-map-pin.js");
var _initMapPins = require("./init-map-pins.js");
//настройка карты (описание аналогично, описанию первой карты)
var initMap2 = function initMap2(mapBlock) {
  var center = mapBlock.dataset.center.split(', ').map(function (str) {
    return +str;
  });
  var zoom = +mapBlock.dataset.zoom;
  var controls = mapBlock.dataset.controls ? mapBlock.dataset.controls.split(' ') : [];
  var behaviorsMap = ['drag', 'multiTouch'];
  window.ymaps.ready(function () {
    var myMap = new ymaps.Map(mapBlock, {
      center: center,
      zoom: zoom,
      controls: controls,
      behaviors: behaviorsMap
    }, {
      autoFitToViewport: 'always'
    });
    (0, _initMapPin.initMapPin)(mapBlock, myMap, 'small');
    (0, _initMapPins.initCategoryPins)(mapBlock, myMap);
  });
};
exports.initMap2 = initMap2;

},{"./init-map-pin.js":21,"./init-map-pins.js":22}],27:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initMap3 = void 0;
var _initMapPin = require("./init-map-pin.js");
var _initMapPins = require("./init-map-pins.js");
var _initMapFilter = require("./init-map-filter.js");
var _initMapZoom = require("./init-map-zoom.js");
//настройка карты (описание аналогично, описанию первой карты)
var initMap3 = function initMap3(mapBlock) {
  var center = mapBlock.dataset.center.split(', ').map(function (str) {
    return +str;
  });
  var zoom = +mapBlock.dataset.zoom;
  var controls = mapBlock.dataset.controls ? mapBlock.dataset.controls.split(' ') : [];
  var behaviorsMap = ['drag', 'multiTouch'];
  window.ymaps.ready(function () {
    var myMap = new ymaps.Map(mapBlock, {
      center: center,
      zoom: zoom,
      controls: controls,
      behaviors: behaviorsMap
    }, {
      autoFitToViewport: 'always'
    });
    (0, _initMapPin.initMapPin)(mapBlock, myMap, 'small');
    (0, _initMapPins.initCategoryPins)(mapBlock, myMap);
    (0, _initMapFilter.initMapFilter)(myMap);
    (0, _initMapZoom.initZoomMap)(myMap);
  });
};
exports.initMap3 = initMap3;

},{"./init-map-filter.js":20,"./init-map-pin.js":21,"./init-map-pins.js":22,"./init-map-zoom.js":23}],28:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initMap4 = void 0;
var _initMapPin = require("./init-map-pin.js");
var _initMapPins = require("./init-map-pins.js");
var _initMapZoom = require("./init-map-zoom.js");
//настройка карты (описание аналогично, описанию первой карты)
var initMap4 = function initMap4(mapBlock) {
  var center = mapBlock.dataset.center.split(', ').map(function (str) {
    return +str;
  });
  var zoom = +mapBlock.dataset.zoom;
  var controls = mapBlock.dataset.controls ? mapBlock.dataset.controls.split(' ') : [];
  var behaviorsMap = ['drag', 'multiTouch'];
  window.ymaps.ready(function () {
    var myMap = new ymaps.Map(mapBlock, {
      center: center,
      zoom: zoom,
      controls: controls,
      behaviors: behaviorsMap
    }, {
      autoFitToViewport: 'always'
    });
    (0, _initMapPin.initMapPin)(mapBlock, myMap, 'small');
    (0, _initMapPins.initCategoryPins)(mapBlock, myMap);
    (0, _initMapZoom.initZoomMap)(myMap);
  });
};
exports.initMap4 = initMap4;

},{"./init-map-pin.js":21,"./init-map-pins.js":22,"./init-map-zoom.js":23}],29:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.modals = exports.initModals = void 0;
var _modals = require("./modals");
var modals;

// Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };

// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },
exports.modals = modals;
var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};
var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);
    });
  }
  exports.modals = modals = new _modals.Modals(settings);
  // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда
  window.modals = modals;
};
exports.initModals = initModals;

},{"./modals":30}],30:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Modals = void 0;
var _scrollLock = require("../../utils/scroll-lock");
var _focusLock = require("../../utils/focus-lock");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, Modals);
    this._scrollLock = new _scrollLock.ScrollLock();
    this._focusLock = new _focusLock.FocusLock();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._stackModalElements = [];
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._resetScrollPos = this._settings[this._settingKey].resetScrollPos;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);
    this._init();
  }
  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;
      if (!this._settings[settingKey]) {
        return;
      }
      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._resetScrollPos = typeof this._settings[settingKey].resetScrollPos === 'boolean' ? this._settings[settingKey].resetScrollPos : this._settings[this._settingKey].resetScrollPos;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-open-modal]')) {
        return;
      }
      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;
      if (!this._modalName) {
        return;
      }
      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';
      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-close-modal]')) {
        return;
      }
      if (target.closest('[data-close-modal="back"]')) {
        this.back();
      } else {
        this.close(target.closest('[data-modal]').dataset.modal);
        this._stackModalElements = [];
      }
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');
        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      if (!modal || modal.classList.contains('is-active')) {
        return;
      }
      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');
      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }
      this._setSettings(modalName);
      modal.classList.add('is-active');
      if (modalName !== this._stackModalElements[this._stackModalElements.length - 1]) {
        this._stackModalElements.push(modalName);
      }
      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }
      if (this._openCallback) {
        this._openCallback();
      }
      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }
      if (this._resetScrollPos) {
        modal.scrollTo(0, 0);
      }
      setTimeout(function () {
        _this._addListeners(modal);
        _this._autoPlay(modal);
        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "back",
    value: function back() {
      if (!this._stackModalElements.length) {
        return;
      }
      var activeModal = this._stackModalElements[this._stackModalElements.length - 1];
      var prevModal = this._stackModalElements[this._stackModalElements.length - 2];
      if (this._stackModalElements.length === 1) {
        this._stackModalElements = [];
      }
      if (prevModal) {
        this._stackModalElements.pop();
        this.open(prevModal);
      }
      this.close(activeModal);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);
      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }
      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }
      modal.classList.remove('is-active');
      this._removeListeners(modal);
      this._stopInteractive(modal);
      if (this._closeCallback) {
        this._closeCallback();
      }
      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }
      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);
      this._setSettings('default');
      this._enableScrolling = true;
    }
  }]);
  return Modals;
}();
exports.Modals = Modals;

},{"../../utils/focus-lock":34,"../../utils/scroll-lock":40}],31:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createNativeSelectMarkup = void 0;
var createNativeOptionsMarkup = function createNativeOptionsMarkup(items, activeIndex) {
  return items.map(function (el, index) {
    if (activeIndex.length) {
      var currentIndex = activeIndex.find(function (item) {
        return item === index;
      });
      if (currentIndex === index) {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', " selected>").concat(el.text ? "".concat(el.text) : '', "</option>");
      } else {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
      }
    } else {
      return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
    }
  }).join('\n');
};
var createNativeSelectMarkup = function createNativeSelectMarkup(_ref) {
  var id = _ref.id,
    items = _ref.items,
    multiple = _ref.multiple,
    name = _ref.name,
    required = _ref.required,
    _ref$activeIndex = _ref.activeIndex,
    activeIndex = _ref$activeIndex === void 0 ? [] : _ref$activeIndex;
  return "<select ".concat(id ? "id='".concat(id, "'") : '', " ").concat(name ? "name='".concat(name, "'") : '', " ").concat(multiple ? 'multiple' : '', " ").concat(required ? 'required' : '', " tabindex=\"-1\" aria-hidden=\"true\">\n            <option value=\"\"></option>\n            ").concat(createNativeOptionsMarkup(items, activeIndex), "\n          </select>");
};
exports.createNativeSelectMarkup = createNativeSelectMarkup;

},{}],32:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomSelect = void 0;
var _render = require("../../utils/render");
var _createSelectMarkup = require("./create-select-markup");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var CustomSelect = /*#__PURE__*/function () {
  function CustomSelect() {
    _classCallCheck(this, CustomSelect);
    this._selects = null;
    this._selectElement = null;
    this._activeIndex = null;
    this._onDocumentClick = this._onDocumentClick.bind(this);
    this._onEscapePress = this._onEscapePress.bind(this);
    this._onSelectItemClick = this._onSelectItemClick.bind(this);
    this._onSelectItemKeydown = this._onSelectItemKeydown.bind(this);
    this._onLastItemKeydown = this._onLastItemKeydown.bind(this);
    this._onSelectClick = this._onSelectClick.bind(this);
    this._onSelectKeydown = this._onSelectKeydown.bind(this);
    window.selectInit = this.init.bind(this);
  }
  _createClass(CustomSelect, [{
    key: "_createMultiString",
    value: function _createMultiString(arr) {
      var str = '';
      if (arr.length) {
        if (arr.length === 1) {
          str = arr[0].innerHTML;
        } else {
          arr.forEach(function (element, index) {
            if (index === arr.length - 1) {
              str += element.innerHTML;
            } else {
              str += "".concat(element.innerHTML, ", ");
            }
          });
        }
      }
      return str;
    }
  }, {
    key: "_setSelectActiveState",
    value: function _setSelectActiveState(multiple, insert, item) {
      var buttonTextBlock = item.querySelector('.custom-select__text');
      var activeItems = item.querySelectorAll('.custom-select__item[aria-selected="true"]');
      var label = item.querySelector('.custom-select__label');
      var str = this._createMultiString(activeItems);
      buttonTextBlock.style.transition = '0s';
      if (label) {
        label.style.transition = '0s';
      }
      setTimeout(function () {
        if (label) {
          label.style.transition = null;
        }
        buttonTextBlock.style.transition = null;
      }, 300);
      if (multiple && insert) {
        item.classList.add('not-empty');
        buttonTextBlock.innerHTML = str;
      } else if (multiple) {
        return;
      } else {
        item.classList.add('not-empty');
        buttonTextBlock.innerHTML = activeItems[0].innerHTML;
      }
    }
  }, {
    key: "_closeSelect",
    value: function _closeSelect() {
      var activeSelect = document.querySelector('[data-select].is-open');
      document.removeEventListener('click', this._onDocumentClick);
      document.removeEventListener('keydown', this._onEscapePress);
      if (activeSelect) {
        activeSelect.classList.remove('is-open');
      }
    }
  }, {
    key: "_onSelectElementClickAction",
    value: function _onSelectElementClickAction(element, index) {
      var parent = element.closest('.custom-select');
      var multiple = parent.dataset.multiple;
      var insert = parent.dataset.insert;
      var buttonTextBlock = parent.querySelector('.custom-select__text');
      var itemText = element.textContent;
      var options = parent.querySelectorAll('option');
      var select = parent.querySelector('select');
      var changeEv = new CustomEvent('change');
      var inputEv = new CustomEvent('input');
      select.dispatchEvent(changeEv);
      select.dispatchEvent(inputEv);
      var form = select.closest('form');
      var parentMessage = parent.querySelector('.input-message');
      if (parentMessage) {
        parentMessage.remove();
      }
      if (form) {
        var formChangeEv = new CustomEvent('change');
        var formInputEv = new CustomEvent('input');
        form.dispatchEvent(formChangeEv);
        form.dispatchEvent(formInputEv);
      }
      if (multiple) {
        if (insert === 'true') {
          if (element.getAttribute('aria-selected') === 'true') {
            element.setAttribute('aria-selected', 'false');
            var activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');
            var str = this._createMultiString(activeItems);
            options[index + 1].selected = false;
            buttonTextBlock.innerText = str;
            if (!str) {
              parent.classList.remove('not-empty');
              parent.classList.remove('is-valid');
            }
          } else {
            element.setAttribute('aria-selected', 'true');
            var _activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');
            var _str = this._createMultiString(_activeItems);
            buttonTextBlock.innerText = _str;
            parent.classList.add('not-empty');
            parent.classList.add('is-valid');
            options[index + 1].selected = true;
          }
        } else {
          if (element.getAttribute('aria-selected') === 'true') {
            element.setAttribute('aria-selected', 'false');
            options[index + 1].selected = false;
          } else {
            element.setAttribute('aria-selected', 'true');
            options[index + 1].selected = true;
          }
        }
      } else {
        var activeItem = parent.querySelector('.custom-select__item[aria-selected="true"]');
        if (element.getAttribute('aria-selected') === 'true') {
          this._closeSelect();
        } else {
          if (activeItem) {
            activeItem.setAttribute('aria-selected', 'false');
            parent.classList.remove('not-empty');
            parent.classList.remove('is-valid');
          }
          buttonTextBlock.innerText = itemText;
          element.setAttribute('aria-selected', 'true');
          parent.classList.add('not-empty');
          parent.classList.add('is-valid');
          options[index + 1].selected = true;
          this._closeSelect();
        }
      }
    }
  }, {
    key: "_onDocumentClick",
    value: function _onDocumentClick(_ref) {
      var target = _ref.target;
      if (!target.closest('.custom-select')) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onEscapePress",
    value: function _onEscapePress(evt) {
      var isEscape = evt.key === 'Escape';
      if (isEscape) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onSelectItemClick",
    value: function _onSelectItemClick(element, index) {
      this._onSelectElementClickAction(element, index);
    }
  }, {
    key: "_onSelectItemKeydown",
    value: function _onSelectItemKeydown(evt, element, index) {
      var isEnter = evt.key === 'Enter';
      if (isEnter) {
        this._onSelectElementClickAction(element, index);
      }
    }
  }, {
    key: "_onLastItemKeydown",
    value: function _onLastItemKeydown(evt) {
      var isTab = evt.key === 'Tab';
      if (isTab) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onSelectClick",
    value: function _onSelectClick(evt) {
      var parent = evt.target.closest('[data-select]');
      var activeSelect = document.querySelector('[data-select].is-open');
      parent.classList.remove('is-invalid');
      if (activeSelect && activeSelect === parent) {
        activeSelect.classList.remove('is-open');
        return;
      }
      if (activeSelect) {
        this._closeSelect();
      }
      document.addEventListener('click', this._onDocumentClick);
      document.addEventListener('keydown', this._onEscapePress);
      if (parent.classList.contains('is-open')) {
        parent.classList.remove('is-open');
      } else {
        parent.classList.add('is-open');
      }
    }
  }, {
    key: "_onSelectKeydown",
    value: function _onSelectKeydown(evt) {
      var parent = evt.target.closest('[data-select]');
      parent.classList.remove('is-invalid');
      if (evt.shiftKey && evt.key === 'Tab' && parent.closest('.is-open')) {
        this._closeSelect();
      }
    }
  }, {
    key: "_setActiveSelectItemsState",
    value: function _setActiveSelectItemsState(multiple, selectItems) {
      var _this = this;
      var flag = true;
      this._activeIndex = [];
      selectItems.forEach(function (item, index) {
        if (multiple) {
          if (item.getAttribute('aria-selected') === 'true') {
            _this._activeIndex.push(index);
          }
        } else {
          if (item.getAttribute('aria-selected') === 'true' && flag) {
            _this._activeIndex.push(index);
            flag = false;
          } else {
            item.setAttribute('aria-selected', 'false');
          }
        }
      });
    }
  }, {
    key: "_createSelectStructure",
    value: function _createSelectStructure(item) {
      var nativeSelect = item.querySelector('select');
      if (nativeSelect) {
        this._selectElement = null;
        return;
      }
      var options = {};
      options.items = [];
      var multiple = item.dataset.multiple;
      var id = item.dataset.id;
      var name = item.dataset.name;
      var required = item.dataset.required;
      var insert = item.dataset.insert;
      var selectItems = item.querySelectorAll('.custom-select__item');
      this._setActiveSelectItemsState(multiple, selectItems);
      if (this._activeIndex.length) {
        options.activeIndex = this._activeIndex;
        this._setSelectActiveState(multiple, insert, item);
      }
      options.name = name || false;
      options.id = id || false;
      options.required = Boolean(required);
      options.multiple = Boolean(multiple);
      selectItems.forEach(function (selectItem) {
        var value = selectItem.dataset.selectValue;
        var itemInfo = {};
        itemInfo.text = selectItem.textContent;
        itemInfo.value = value;
        options.items.push(itemInfo);
      });
      (0, _render.renderElement)(item, (0, _render.createElement)((0, _createSelectMarkup.createNativeSelectMarkup)(options)));
      this._selectElement = item;
      this._activeIndex = null;
    }
  }, {
    key: "_setSelectAction",
    value: function _setSelectAction() {
      var _this2 = this;
      if (!this._selectElement) {
        return;
      }
      var button = this._selectElement.querySelector('.custom-select__button');
      var selectItems = this._selectElement.querySelectorAll('.custom-select__item');
      button.addEventListener('click', this._onSelectClick);
      button.addEventListener('keydown', this._onSelectKeydown);
      selectItems.forEach(function (element, index) {
        element.addEventListener('click', function () {
          _this2._onSelectItemClick(element, index);
        });
        element.addEventListener('keydown', function (evt) {
          _this2._onSelectItemKeydown(evt, element, index);
        });
        if (index === selectItems.length - 1) {
          element.addEventListener('keydown', _this2._onLastItemKeydown);
        }
      });
    }
  }, {
    key: "init",
    value: function init() {
      var _this3 = this;
      this._selects = document.querySelectorAll('[data-select]');
      this._selects.forEach(function (select) {
        _this3._createSelectStructure(select);
        _this3._setSelectAction();
      });
    }
  }]);
  return CustomSelect;
}();
exports.CustomSelect = CustomSelect;

},{"../../utils/render":39,"./create-select-markup":31}],33:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchApi = void 0;
var fetchApi = function fetchApi(url, onSuccess, onError) {
  return fetch(url).then(function (res) {
    if (!res.ok) {
      throw new Error(res.status);
    }
    return res.json();
  }).then(function (data) {
    if (onSuccess) {
      onSuccess(data);
    }
    return data;
  }).catch(function (err) {
    if (onError) {
      onError(err);
    } else {
      console.error(err); // eslint-disable-line no-console
    }
  });
};
exports.fetchApi = fetchApi;

},{}],34:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FocusLock = void 0;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);
    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }
  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;
      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }
        if (this._focusableElements.length === 1) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
      }
      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();
        this._focusableElements[0].focus();
      }
      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();
        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);
      if (!lockedElement) {
        return;
      }
      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;
      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];
      if (this._endElement) {
        this._endElement.blur();
      }
      if (startElement && startFocus) {
        startElement.focus();
      }
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }
      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);
  return FocusLock;
}();
exports.FocusLock = FocusLock;
window.focusLock = new FocusLock();

},{}],35:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosChecker = void 0;
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};
exports.iosChecker = iosChecker;

},{}],36:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosVhFix = void 0;
var _iosChecker = require("./ios-checker");
var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if ((0, _iosChecker.iosChecker)()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};
exports.iosVhFix = iosVhFix;

},{"./ios-checker":35}],37:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resizeObserver = exports.keyObserver = exports.clickObserver = exports.EventObserver = void 0;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var EventObserver = /*#__PURE__*/function () {
  function EventObserver() {
    _classCallCheck(this, EventObserver);
    this.observers = [];
    this.fire = this.fire.bind(this);
  }
  _createClass(EventObserver, [{
    key: "subscribe",
    value: function subscribe(fn) {
      this.observers.push(fn);
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe(fn) {
      this.observers = this.observers.filter(function (subscriber) {
        return subscriber !== fn;
      });
    }
  }, {
    key: "fire",
    value: function fire(data) {
      this.observers.forEach(function (subscriber) {
        return subscriber(data);
      });
    }
  }]);
  return EventObserver;
}();
exports.EventObserver = EventObserver;
var resizeObserver = new EventObserver();
exports.resizeObserver = resizeObserver;
var resizeObserverProto = new ResizeObserver(function () {
  return setTimeout(function () {
    return resizeObserver.fire('resize');
  }, 10);
});
resizeObserverProto.observe(document.documentElement);

// везде следует использовать его прим: resizeObserver.subscribe(() => {console.log('asd')})

var clickObserver = new EventObserver();
exports.clickObserver = clickObserver;
window.addEventListener('click', clickObserver.fire);
var keyObserver = new EventObserver();
exports.keyObserver = keyObserver;
window.addEventListener('keydown', keyObserver.fire);

},{}],38:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pageScroller = void 0;
var vpTouch = window.matchMedia('(pointer: coarse)');
var pageScroller = vpTouch.matches ? '.wrapper' : 'body';
exports.pageScroller = pageScroller;

},{}],39:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderElement = exports.createElement = void 0;
var createElement = function createElement(template) {
  var newElement = document.createElement('div');
  newElement.innerHTML = template;
  return newElement.firstChild;
};
exports.createElement = createElement;
var renderElement = function renderElement(container, component) {
  var place = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'beforeend';
  switch (place) {
    case 'prepend':
      container.prepend(component);
      break;
    case 'afterend':
      container.after(component);
      break;
    case 'beforeend':
      container.append(component);
      break;
  }
};
exports.renderElement = renderElement;

},{}],40:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScrollLock = void 0;
var _iosChecker = require("./ios-checker");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);
    this._iosChecker = _iosChecker.iosChecker;
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }
  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;
      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();
      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");
        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }
      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;
      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });
      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);
  return ScrollLock;
}();
exports.ScrollLock = ScrollLock;
window.scrollLock = new ScrollLock();

},{"./ios-checker":35}],41:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
/* !
 * ScrollToPlugin 3.11.4
 * https://greensock.com
 *
 * @license Copyright 2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */

!function (e, t) {
  (typeof exports === "undefined" ? "undefined" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? t(exports) : typeof define === 'function' && define.amd ? define(['exports'], t) : t((e = e || self).window = e.window || {});
}(void 0, function (e) {
  'use strict';

  function l() {
    return typeof window !== 'undefined';
  }
  function m() {
    return f || l() && (f = window.gsap) && f.registerPlugin && f;
  }
  function n(e) {
    return typeof e === 'string';
  }
  function o(e) {
    return typeof e === 'function';
  }
  function p(e, t) {
    var o = t === 'x' ? 'Width' : 'Height';
    var n = 'scroll' + o;
    var l = 'client' + o;
    return e === T || e === i || e === c ? Math.max(i[n], c[n]) - (T['inner' + o] || i[l] || c[l]) : e[n] - e['offset' + o];
  }
  function q(e, t) {
    var o = 'scroll' + (t === 'x' ? 'Left' : 'Top');
    return e === T && (e.pageXOffset != null ? o = 'page' + t.toUpperCase() + 'Offset' : e = i[o] != null ? i : c), function () {
      return e[o];
    };
  }
  function s(e, t) {
    if (!(e = y(e)[0]) || !e.getBoundingClientRect) {
      return console.warn('scrollTo target doesn\'t exist. Using 0') || {
        x: 0,
        y: 0
      };
    }
    var o = e.getBoundingClientRect();
    var n = !t || t === T || t === c;
    var l = n ? {
      top: i.clientTop - (T.pageYOffset || i.scrollTop || c.scrollTop || 0),
      left: i.clientLeft - (T.pageXOffset || i.scrollLeft || c.scrollLeft || 0)
    } : t.getBoundingClientRect();
    var r = {
      x: o.left - l.left,
      y: o.top - l.top
    };
    return !n && t && (r.x += q(t, 'x')(), r.y += q(t, 'y')()), r;
  }
  function t(e, t, o, l, r) {
    return isNaN(e) || _typeof(e) === 'object' ? n(e) && e.charAt(1) === '=' ? parseFloat(e.substr(2)) * (e.charAt(0) === '-' ? -1 : 1) + l - r : e === 'max' ? p(t, o) - r : Math.min(p(t, o), s(e, t)[o] - r) : parseFloat(e) - r;
  }
  function u() {
    f = m(), l() && f && typeof document !== 'undefined' && document.body && (T = window, c = document.body, i = document.documentElement, y = f.utils.toArray, f.config({
      autoKillThreshold: 7
    }), v = f.config(), a = 1);
  }
  var f;
  var a;
  var T;
  var i;
  var c;
  var y;
  var v;
  var h;
  var r = {
    version: '3.11.4',
    name: 'scrollTo',
    rawVars: 1,
    register: function register(e) {
      f = e, u();
    },
    init: function init(e, l, r, s, i) {
      a || u();
      var p = this;
      var c = f.getProperty(e, 'scrollSnapType');
      p.isWin = e === T, p.target = e, p.tween = r, l = function _clean(e, t, l, r) {
        if (o(e) && (e = e(t, l, r)), _typeof(e) !== 'object') {
          return n(e) && e !== 'max' && e.charAt(1) !== '=' ? {
            x: e,
            y: e
          } : {
            y: e
          };
        }
        if (e.nodeType) {
          return {
            y: e,
            x: e
          };
        }
        var s;
        var i = {};
        for (s in e) {
          i[s] = s !== 'onAutoKill' && o(e[s]) ? e[s](t, l, r) : e[s];
        }
        return i;
      }(l, s, e, i), p.vars = l, p.autoKill = !!l.autoKill, p.getX = q(e, 'x'), p.getY = q(e, 'y'), p.x = p.xPrev = p.getX(), p.y = p.yPrev = p.getY(), h = h || f.core.globals().ScrollTrigger, f.getProperty(e, 'scrollBehavior') === 'smooth' && f.set(e, {
        scrollBehavior: 'auto'
      }), c && c !== 'none' && (p.snap = 1, p.snapInline = e.style.scrollSnapType, e.style.scrollSnapType = 'none'), l.x != null ? (p.add(p, 'x', p.x, t(l.x, e, 'x', p.x, l.offsetX || 0), s, i), p._props.push('scrollTo_x')) : p.skipX = 1, l.y != null ? (p.add(p, 'y', p.y, t(l.y, e, 'y', p.y, l.offsetY || 0), s, i), p._props.push('scrollTo_y')) : p.skipY = 1;
    },
    render: function render(e, t) {
      for (var o, n, l, r, s, i = t._pt, c = t.target, u = t.tween, f = t.autoKill, a = t.xPrev, y = t.yPrev, d = t.isWin, g = t.snap, x = t.snapInline; i;) {
        i.r(e, i.d), i = i._next;
      }
      o = d || !t.skipX ? t.getX() : a, l = (n = d || !t.skipY ? t.getY() : y) - y, r = o - a, s = v.autoKillThreshold, t.x < 0 && (t.x = 0), t.y < 0 && (t.y = 0), f && (!t.skipX && (s < r || r < -s) && o < p(c, 'x') && (t.skipX = 1), !t.skipY && (s < l || l < -s) && n < p(c, 'y') && (t.skipY = 1), t.skipX && t.skipY && (u.kill(), t.vars.onAutoKill && t.vars.onAutoKill.apply(u, t.vars.onAutoKillParams || []))), d ? T.scrollTo(t.skipX ? o : t.x, t.skipY ? n : t.y) : (t.skipY || (c.scrollTop = t.y), t.skipX || (c.scrollLeft = t.x)), !g || e !== 1 && e !== 0 || (n = c.scrollTop, o = c.scrollLeft, x ? c.style.scrollSnapType = x : c.style.removeProperty('scroll-snap-type'), c.scrollTop = n + 1, c.scrollLeft = o + 1, c.scrollTop = n, c.scrollLeft = o), t.xPrev = t.x, t.yPrev = t.y, h && h.update();
    },
    kill: function kill(e) {
      var t = e === 'scrollTo';
      !t && e !== 'scrollTo_x' || (this.skipX = 1), !t && e !== 'scrollTo_y' || (this.skipY = 1);
    }
  };
  r.max = p, r.getOffset = s, r.buildGetter = q, m() && f.registerPlugin(r), e.ScrollToPlugin = r, e.default = r;
  if (typeof window === 'undefined' || window !== e) {
    Object.defineProperty(e, '__esModule', {
      value: !0
    });
  } else {
    delete e.default;
  }
});

},{}],42:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
/*!
 * ScrollTrigger 3.11.4
 * https://greensock.com
 * 
 * @license Copyright 2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */

!function (e, t) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t((e = e || self).window = e.window || {});
}(void 0, function (e) {
  "use strict";

  function _defineProperties(e, t) {
    for (var r = 0; r < t.length; r++) {
      var n = t[r];
      n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
    }
  }
  function r() {
    return we || "undefined" != typeof window && (we = window.gsap) && we.registerPlugin && we;
  }
  function z(e, t) {
    return ~Fe.indexOf(e) && Fe[Fe.indexOf(e) + 1][t];
  }
  function A(e) {
    return !!~t.indexOf(e);
  }
  function B(e, t, r, n, o) {
    return e.addEventListener(t, r, {
      passive: !n,
      capture: !!o
    });
  }
  function C(e, t, r, n) {
    return e.removeEventListener(t, r, !!n);
  }
  function F() {
    return Be && Be.isPressed || ze.cache++;
  }
  function G(r, n) {
    function Tc(e) {
      if (e || 0 === e) {
        o && (Ce.history.scrollRestoration = "manual");
        var t = Be && Be.isPressed;
        e = Tc.v = Math.round(e) || (Be && Be.iOS ? 1 : 0), r(e), Tc.cacheID = ze.cache, t && i("ss", e);
      } else (n || ze.cache !== Tc.cacheID || i("ref")) && (Tc.cacheID = ze.cache, Tc.v = r());
      return Tc.v + Tc.offset;
    }
    return Tc.offset = 0, r && Tc;
  }
  function J(e) {
    return we.utils.toArray(e)[0] || ("string" == typeof e && !1 !== we.config().nullTargetWarn ? console.warn("Element not found:", e) : null);
  }
  function K(t, e) {
    var r = e.s,
      n = e.sc;
    A(t) && (t = Ee.scrollingElement || ke);
    var o = ze.indexOf(t),
      i = n === Ke.sc ? 1 : 2;
    ~o || (o = ze.push(t) - 1), ze[o + i] || t.addEventListener("scroll", F);
    var a = ze[o + i],
      s = a || (ze[o + i] = G(z(t, r), !0) || (A(t) ? n : G(function (e) {
        return arguments.length ? t[r] = e : t[r];
      })));
    return s.target = t, a || (s.smooth = "smooth" === we.getProperty(t, "scrollBehavior")), s;
  }
  function L(e, t, o) {
    function pd(e, t) {
      var r = Ne();
      t || n < r - s ? (a = i, i = e, l = s, s = r) : o ? i += e : i = a + (e - a) / (r - l) * (s - l);
    }
    var i = e,
      a = e,
      s = Ne(),
      l = s,
      n = t || 50,
      c = Math.max(500, 3 * n);
    return {
      update: pd,
      reset: function reset() {
        a = i = o ? 0 : i, l = s = 0;
      },
      getVelocity: function getVelocity(e) {
        var t = l,
          r = a,
          n = Ne();
        return !e && 0 !== e || e === i || pd(e), s === l || c < n - l ? 0 : (i + (o ? r : -r)) / ((o ? n : s) - t) * 1e3;
      }
    };
  }
  function M(e, t) {
    return t && !e._gsapAllow && e.preventDefault(), e.changedTouches ? e.changedTouches[0] : e;
  }
  function N(e) {
    var t = Math.max.apply(Math, e),
      r = Math.min.apply(Math, e);
    return Math.abs(t) >= Math.abs(r) ? t : r;
  }
  function O() {
    (Ae = we.core.globals().ScrollTrigger) && Ae.core && function _integrate() {
      var e = Ae.core,
        r = e.bridge || {},
        t = e._scrollers,
        n = e._proxies;
      t.push.apply(t, ze), n.push.apply(n, Fe), ze = t, Fe = n, i = function _bridge(e, t) {
        return r[e](t);
      };
    }();
  }
  function P(e) {
    return (we = e || r()) && "undefined" != typeof document && document.body && (Ce = window, ke = (Ee = document).documentElement, Me = Ee.body, t = [Ce, Ee, ke, Me], we.utils.clamp, Ie = we.core.context || function () {}, Oe = "onpointerenter" in Me ? "pointer" : "mouse", Pe = E.isTouch = Ce.matchMedia && Ce.matchMedia("(hover: none), (pointer: coarse)").matches ? 1 : "ontouchstart" in Ce || 0 < navigator.maxTouchPoints || 0 < navigator.msMaxTouchPoints ? 2 : 0, De = E.eventTypes = ("ontouchstart" in ke ? "touchstart,touchmove,touchcancel,touchend" : "onpointerdown" in ke ? "pointerdown,pointermove,pointercancel,pointerup" : "mousedown,mousemove,mouseup,mouseup").split(","), setTimeout(function () {
      return o = 0;
    }, 500), O(), Se = 1), Se;
  }
  var we,
    Se,
    Ce,
    Ee,
    ke,
    Me,
    Pe,
    Oe,
    Ae,
    t,
    Be,
    De,
    Ie,
    o = 1,
    Le = [],
    ze = [],
    Fe = [],
    Ne = Date.now,
    i = function _bridge(e, t) {
      return t;
    },
    n = "scrollLeft",
    a = "scrollTop",
    Xe = {
      s: n,
      p: "left",
      p2: "Left",
      os: "right",
      os2: "Right",
      d: "width",
      d2: "Width",
      a: "x",
      sc: G(function (e) {
        return arguments.length ? Ce.scrollTo(e, Ke.sc()) : Ce.pageXOffset || Ee[n] || ke[n] || Me[n] || 0;
      })
    },
    Ke = {
      s: a,
      p: "top",
      p2: "Top",
      os: "bottom",
      os2: "Bottom",
      d: "height",
      d2: "Height",
      a: "y",
      op: Xe,
      sc: G(function (e) {
        return arguments.length ? Ce.scrollTo(Xe.sc(), e) : Ce.pageYOffset || Ee[a] || ke[a] || Me[a] || 0;
      })
    };
  Xe.op = Ke, ze.cache = 0;
  var E = (Observer.prototype.init = function init(e) {
    Se || P(we) || console.warn("Please gsap.registerPlugin(Observer)"), Ae || O();
    var o = e.tolerance,
      a = e.dragMinimum,
      t = e.type,
      i = e.target,
      r = e.lineHeight,
      n = e.debounce,
      s = e.preventDefault,
      l = e.onStop,
      c = e.onStopDelay,
      u = e.ignore,
      f = e.wheelSpeed,
      p = e.event,
      d = e.onDragStart,
      g = e.onDragEnd,
      h = e.onDrag,
      v = e.onPress,
      b = e.onRelease,
      m = e.onRight,
      y = e.onLeft,
      x = e.onUp,
      w = e.onDown,
      _ = e.onChangeX,
      T = e.onChangeY,
      S = e.onChange,
      E = e.onToggleX,
      k = e.onToggleY,
      D = e.onHover,
      I = e.onHoverEnd,
      R = e.onMove,
      Y = e.ignoreCheck,
      z = e.isNormalizer,
      X = e.onGestureStart,
      W = e.onGestureEnd,
      H = e.onWheel,
      U = e.onEnable,
      j = e.onDisable,
      q = e.onClick,
      V = e.scrollSpeed,
      G = e.capture,
      Z = e.allowClicks,
      $ = e.lockAxis,
      Q = e.onLockAxis;
    function Qe() {
      return ye = Ne();
    }
    function Re(e, t) {
      return (se.event = e) && u && ~u.indexOf(e.target) || t && ge && "touch" !== e.pointerType || Y && Y(e, t);
    }
    function Te() {
      var e = se.deltaX = N(be),
        t = se.deltaY = N(me),
        r = Math.abs(e) >= o,
        n = Math.abs(t) >= o;
      S && (r || n) && S(se, e, t, be, me), r && (m && 0 < se.deltaX && m(se), y && se.deltaX < 0 && y(se), _ && _(se), E && se.deltaX < 0 != le < 0 && E(se), le = se.deltaX, be[0] = be[1] = be[2] = 0), n && (w && 0 < se.deltaY && w(se), x && se.deltaY < 0 && x(se), T && T(se), k && se.deltaY < 0 != ce < 0 && k(se), ce = se.deltaY, me[0] = me[1] = me[2] = 0), (ne || re) && (R && R(se), re && (h(se), re = !1), ne = !1), ie && !(ie = !1) && Q && Q(se), oe && (H(se), oe = !1), ee = 0;
    }
    function Ue(e, t, r) {
      be[r] += e, me[r] += t, se._vx.update(e), se._vy.update(t), n ? ee = ee || requestAnimationFrame(Te) : Te();
    }
    function Ve(e, t) {
      $ && !ae && (se.axis = ae = Math.abs(e) > Math.abs(t) ? "x" : "y", ie = !0), "y" !== ae && (be[2] += e, se._vx.update(e, !0)), "x" !== ae && (me[2] += t, se._vy.update(t, !0)), n ? ee = ee || requestAnimationFrame(Te) : Te();
    }
    function We(e) {
      if (!Re(e, 1)) {
        var t = (e = M(e, s)).clientX,
          r = e.clientY,
          n = t - se.x,
          o = r - se.y,
          i = se.isDragging;
        se.x = t, se.y = r, (i || Math.abs(se.startX - t) >= a || Math.abs(se.startY - r) >= a) && (h && (re = !0), i || (se.isDragging = !0), Ve(n, o), i || d && d(se));
      }
    }
    function Ye(t) {
      if (!Re(t, 1)) {
        C(z ? i : ve, De[1], We, !0);
        var e = !isNaN(se.y - se.startY),
          r = se.isDragging && (3 < Math.abs(se.x - se.startX) || 3 < Math.abs(se.y - se.startY)),
          n = M(t);
        !r && e && (se._vx.reset(), se._vy.reset(), s && Z && we.delayedCall(.08, function () {
          if (300 < Ne() - ye && !t.defaultPrevented) if (t.target.click) t.target.click();else if (ve.createEvent) {
            var e = ve.createEvent("MouseEvents");
            e.initMouseEvent("click", !0, !0, Ce, 1, n.screenX, n.screenY, n.clientX, n.clientY, !1, !1, !1, !1, 0, null), t.target.dispatchEvent(e);
          }
        })), se.isDragging = se.isGesturing = se.isPressed = !1, l && !z && te.restart(!0), g && r && g(se), b && b(se, r);
      }
    }
    function Ze(e) {
      return e.touches && 1 < e.touches.length && (se.isGesturing = !0) && X(e, se.isDragging);
    }
    function $e() {
      return (se.isGesturing = !1) || W(se);
    }
    function _e(e) {
      if (!Re(e)) {
        var t = ue(),
          r = fe();
        Ue((t - pe) * V, (r - de) * V, 1), pe = t, de = r, l && te.restart(!0);
      }
    }
    function af(e) {
      if (!Re(e)) {
        e = M(e, s), H && (oe = !0);
        var t = (1 === e.deltaMode ? r : 2 === e.deltaMode ? Ce.innerHeight : 1) * f;
        Ue(e.deltaX * t, e.deltaY * t, 0), l && !z && te.restart(!0);
      }
    }
    function bf(e) {
      if (!Re(e)) {
        var t = e.clientX,
          r = e.clientY,
          n = t - se.x,
          o = r - se.y;
        se.x = t, se.y = r, ne = !0, (n || o) && Ve(n, o);
      }
    }
    function cf(e) {
      se.event = e, D(se);
    }
    function df(e) {
      se.event = e, I(se);
    }
    function ef(e) {
      return Re(e) || M(e, s) && q(se);
    }
    this.target = i = J(i) || ke, this.vars = e, u = u && we.utils.toArray(u), o = o || 1e-9, a = a || 0, f = f || 1, V = V || 1, t = t || "wheel,touch,pointer", n = !1 !== n, r = r || parseFloat(Ce.getComputedStyle(Me).lineHeight) || 22;
    var ee,
      te,
      re,
      ne,
      oe,
      ie,
      ae,
      se = this,
      le = 0,
      ce = 0,
      ue = K(i, Xe),
      fe = K(i, Ke),
      pe = ue(),
      de = fe(),
      ge = ~t.indexOf("touch") && !~t.indexOf("pointer") && "pointerdown" === De[0],
      he = A(i),
      ve = i.ownerDocument || Ee,
      be = [0, 0, 0],
      me = [0, 0, 0],
      ye = 0,
      xe = se.onPress = function (e) {
        Re(e, 1) || (se.axis = ae = null, te.pause(), se.isPressed = !0, e = M(e), le = ce = 0, se.startX = se.x = e.clientX, se.startY = se.y = e.clientY, se._vx.reset(), se._vy.reset(), B(z ? i : ve, De[1], We, s, !0), se.deltaX = se.deltaY = 0, v && v(se));
      };
    te = se._dc = we.delayedCall(c || .25, function onStopFunc() {
      se._vx.reset(), se._vy.reset(), te.pause(), l && l(se);
    }).pause(), se.deltaX = se.deltaY = 0, se._vx = L(0, 50, !0), se._vy = L(0, 50, !0), se.scrollX = ue, se.scrollY = fe, se.isDragging = se.isGesturing = se.isPressed = !1, Ie(this), se.enable = function (e) {
      return se.isEnabled || (B(he ? ve : i, "scroll", F), 0 <= t.indexOf("scroll") && B(he ? ve : i, "scroll", _e, s, G), 0 <= t.indexOf("wheel") && B(i, "wheel", af, s, G), (0 <= t.indexOf("touch") && Pe || 0 <= t.indexOf("pointer")) && (B(i, De[0], xe, s, G), B(ve, De[2], Ye), B(ve, De[3], Ye), Z && B(i, "click", Qe, !1, !0), q && B(i, "click", ef), X && B(ve, "gesturestart", Ze), W && B(ve, "gestureend", $e), D && B(i, Oe + "enter", cf), I && B(i, Oe + "leave", df), R && B(i, Oe + "move", bf)), se.isEnabled = !0, e && e.type && xe(e), U && U(se)), se;
    }, se.disable = function () {
      se.isEnabled && (Le.filter(function (e) {
        return e !== se && A(e.target);
      }).length || C(he ? ve : i, "scroll", F), se.isPressed && (se._vx.reset(), se._vy.reset(), C(z ? i : ve, De[1], We, !0)), C(he ? ve : i, "scroll", _e, G), C(i, "wheel", af, G), C(i, De[0], xe, G), C(ve, De[2], Ye), C(ve, De[3], Ye), C(i, "click", Qe, !0), C(i, "click", ef), C(ve, "gesturestart", Ze), C(ve, "gestureend", $e), C(i, Oe + "enter", cf), C(i, Oe + "leave", df), C(i, Oe + "move", bf), se.isEnabled = se.isPressed = se.isDragging = !1, j && j(se));
    }, se.kill = se.revert = function () {
      se.disable();
      var e = Le.indexOf(se);
      0 <= e && Le.splice(e, 1), Be === se && (Be = 0);
    }, Le.push(se), z && A(i) && (Be = se), se.enable(p);
  }, function _createClass(e, t, r) {
    return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), e;
  }(Observer, [{
    key: "velocityX",
    get: function get() {
      return this._vx.getVelocity();
    }
  }, {
    key: "velocityY",
    get: function get() {
      return this._vy.getVelocity();
    }
  }]), Observer);
  function Observer(e) {
    this.init(e);
  }
  E.version = "3.11.4", E.create = function (e) {
    return new E(e);
  }, E.register = P, E.getAll = function () {
    return Le.slice();
  }, E.getById = function (t) {
    return Le.filter(function (e) {
      return e.vars.id === t;
    })[0];
  }, r() && we.registerPlugin(E);
  function ya() {
    return ot = 1;
  }
  function za() {
    return ot = 0;
  }
  function Aa(e) {
    return e;
  }
  function Ba(e) {
    return Math.round(1e5 * e) / 1e5 || 0;
  }
  function Ca() {
    return "undefined" != typeof window;
  }
  function Da() {
    return He || Ca() && (He = window.gsap) && He.registerPlugin && He;
  }
  function Ea(e) {
    return !!~l.indexOf(e);
  }
  function Fa(e) {
    return z(e, "getBoundingClientRect") || (Ea(e) ? function () {
      return Yt.width = Je.innerWidth, Yt.height = Je.innerHeight, Yt;
    } : function () {
      return Mt(e);
    });
  }
  function Ia(e, t) {
    var r = t.s,
      n = t.d2,
      o = t.d,
      i = t.a;
    return (r = "scroll" + n) && (i = z(e, r)) ? i() - Fa(e)()[o] : Ea(e) ? (qe[r] || Ge[r]) - (Je["inner" + n] || qe["client" + n] || Ge["client" + n]) : e[r] - e["offset" + n];
  }
  function Ja(e, t) {
    for (var r = 0; r < g.length; r += 3) t && !~t.indexOf(g[r + 1]) || e(g[r], g[r + 1], g[r + 2]);
  }
  function Ka(e) {
    return "string" == typeof e;
  }
  function La(e) {
    return "function" == typeof e;
  }
  function Ma(e) {
    return "number" == typeof e;
  }
  function Na(e) {
    return "object" == _typeof(e);
  }
  function Oa(e, t, r) {
    return e && e.progress(t ? 0 : 1) && r && e.pause();
  }
  function Pa(e, t) {
    if (e.enabled) {
      var r = t(e);
      r && r.totalTime && (e.callbackAnimation = r);
    }
  }
  function eb(e) {
    return Je.getComputedStyle(e);
  }
  function gb(e, t) {
    for (var r in t) r in e || (e[r] = t[r]);
    return e;
  }
  function ib(e, t) {
    var r = t.d2;
    return e["offset" + r] || e["client" + r] || 0;
  }
  function jb(e) {
    var t,
      r = [],
      n = e.labels,
      o = e.duration();
    for (t in n) r.push(n[t] / o);
    return r;
  }
  function lb(o) {
    var i = He.utils.snap(o),
      a = Array.isArray(o) && o.slice(0).sort(function (e, t) {
        return e - t;
      });
    return a ? function (e, t, r) {
      var n;
      if (void 0 === r && (r = .001), !t) return i(e);
      if (0 < t) {
        for (e -= r, n = 0; n < a.length; n++) if (a[n] >= e) return a[n];
        return a[n - 1];
      }
      for (n = a.length, e += r; n--;) if (a[n] <= e) return a[n];
      return a[0];
    } : function (e, t, r) {
      void 0 === r && (r = .001);
      var n = i(e);
      return !t || Math.abs(n - e) < r || n - e < 0 == t < 0 ? n : i(t < 0 ? e - o : e + o);
    };
  }
  function nb(t, r, e, n) {
    return e.split(",").forEach(function (e) {
      return t(r, e, n);
    });
  }
  function ob(e, t, r, n, o) {
    return e.addEventListener(t, r, {
      passive: !n,
      capture: !!o
    });
  }
  function pb(e, t, r, n) {
    return e.removeEventListener(t, r, !!n);
  }
  function qb(e, t, r) {
    return r && r.wheelHandler && e(t, "wheel", r);
  }
  function ub(e, t) {
    if (Ka(e)) {
      var r = e.indexOf("="),
        n = ~r ? (e.charAt(r - 1) + 1) * parseFloat(e.substr(r + 1)) : 0;
      ~r && (e.indexOf("%") > r && (n *= t / 100), e = e.substr(0, r - 1)), e = n + (e in I ? I[e] * t : ~e.indexOf("%") ? parseFloat(e) * t / 100 : parseFloat(e) || 0);
    }
    return e;
  }
  function vb(e, t, r, n, o, i, a, s) {
    var l = o.startColor,
      c = o.endColor,
      u = o.fontSize,
      f = o.indent,
      p = o.fontWeight,
      d = je.createElement("div"),
      g = Ea(r) || "fixed" === z(r, "pinType"),
      h = -1 !== e.indexOf("scroller"),
      v = g ? Ge : r,
      b = -1 !== e.indexOf("start"),
      m = b ? l : c,
      y = "border-color:" + m + ";font-size:" + u + ";color:" + m + ";font-weight:" + p + ";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;";
    return y += "position:" + ((h || s) && g ? "fixed;" : "absolute;"), !h && !s && g || (y += (n === Ke ? T : S) + ":" + (i + parseFloat(f)) + "px;"), a && (y += "box-sizing:border-box;text-align:left;width:" + a.offsetWidth + "px;"), d._isStart = b, d.setAttribute("class", "gsap-marker-" + e + (t ? " marker-" + t : "")), d.style.cssText = y, d.innerText = t || 0 === t ? e + "-" + t : e, v.children[0] ? v.insertBefore(d, v.children[0]) : v.appendChild(d), d._offset = d["offset" + n.op.d2], R(d, 0, n, b), d;
  }
  function Ab() {
    return 34 < gt() - ht && (w = w || requestAnimationFrame(j));
  }
  function Bb() {
    v && v.isPressed && !(v.startX > Ge.clientWidth) || (ze.cache++, v ? w = w || requestAnimationFrame(j) : j(), ht || W("scrollStart"), ht = gt());
  }
  function Cb() {
    y = Je.innerWidth, m = Je.innerHeight;
  }
  function Db() {
    ze.cache++, nt || h || je.fullscreenElement || je.webkitFullscreenElement || b && y === Je.innerWidth && !(Math.abs(Je.innerHeight - m) > .25 * Je.innerHeight) || c.restart(!0);
  }
  function Gb() {
    return pb(Q, "scrollEnd", Gb) || It(!0);
  }
  function Jb(e) {
    for (var t = 0; t < H.length; t += 5) (!e || H[t + 4] && H[t + 4].query === e) && (H[t].style.cssText = H[t + 1], H[t].getBBox && H[t].setAttribute("transform", H[t + 2] || ""), H[t + 3].uncache = 1);
  }
  function Kb(e, t) {
    var r;
    for (it = 0; it < At.length; it++) !(r = At[it]) || t && r._ctx !== t || (e ? r.kill(1) : r.revert(!0, !0));
    t && Jb(t), t || W("revert");
  }
  function Lb(e, t) {
    ze.cache++, !t && ut || ze.forEach(function (e) {
      return La(e) && e.cacheID++ && (e.rec = 0);
    }), Ka(e) && (Je.history.scrollRestoration = x = e);
  }
  function Yb(e, t, r, n) {
    if (!e._gsap.swappedIn) {
      for (var o, i = q.length, a = t.style, s = e.style; i--;) a[o = q[i]] = r[o];
      a.position = "absolute" === r.position ? "absolute" : "relative", "inline" === r.display && (a.display = "inline-block"), s[S] = s[T] = "auto", a.flexBasis = r.flexBasis || "auto", a.overflow = "visible", a.boxSizing = "border-box", a[mt] = ib(e, Xe) + kt, a[yt] = ib(e, Ke) + kt, a[St] = s[Ct] = s.top = s.left = "0", Rt(n), s[mt] = s.maxWidth = r[mt], s[yt] = s.maxHeight = r[yt], s[St] = r[St], e.parentNode !== t && (e.parentNode.insertBefore(t, e), t.appendChild(e)), e._gsap.swappedIn = !0;
    }
  }
  function _b(e) {
    for (var t = V.length, r = e.style, n = [], o = 0; o < t; o++) n.push(V[o], r[V[o]]);
    return n.t = e, n;
  }
  function cc(e, t, r, n, o, i, a, s, l, c, u, f, p) {
    La(e) && (e = e(s)), Ka(e) && "max" === e.substr(0, 3) && (e = f + ("=" === e.charAt(4) ? ub("0" + e.substr(3), r) : 0));
    var d,
      g,
      h,
      v = p ? p.time() : 0;
    if (p && p.seek(0), Ma(e)) a && R(a, r, n, !0);else {
      La(t) && (t = t(s));
      var b,
        m,
        y,
        x,
        w = (e || "0").split(" ");
      h = J(t) || Ge, (b = Mt(h) || {}) && (b.left || b.top) || "none" !== eb(h).display || (x = h.style.display, h.style.display = "block", b = Mt(h), x ? h.style.display = x : h.style.removeProperty("display")), m = ub(w[0], b[n.d]), y = ub(w[1] || "0", r), e = b[n.p] - l[n.p] - c + m + o - y, a && R(a, y, n, r - y < 20 || a._isStart && 20 < y), r -= r - y;
    }
    if (i) {
      var _ = e + r,
        T = i._isStart;
      d = "scroll" + n.d2, R(i, _, n, T && 20 < _ || !T && (u ? Math.max(Ge[d], qe[d]) : i.parentNode[d]) <= _ + 1), u && (l = Mt(a), u && (i.style[n.op.p] = l[n.op.p] - n.op.m - i._offset + kt));
    }
    return p && h && (d = Mt(h), p.seek(f), g = Mt(h), p._caScrollDist = d[n.p] - g[n.p], e = e / p._caScrollDist * f), p && p.seek(v), p ? e : Math.round(e);
  }
  function ec(e, t, r, n) {
    if (e.parentNode !== t) {
      var o,
        i,
        a = e.style;
      if (t === Ge) {
        for (o in e._stOrig = a.cssText, i = eb(e)) +o || $.test(o) || !i[o] || "string" != typeof a[o] || "0" === o || (a[o] = i[o]);
        a.top = r, a.left = n;
      } else a.cssText = e._stOrig;
      He.core.getCache(e).uncache = 1, t.appendChild(e);
    }
  }
  function fc(l, e) {
    function Uj(e, t, r, n, o) {
      var i = Uj.tween,
        a = t.onComplete,
        s = {};
      return r = r || f(), o = n && o || 0, n = n || e - r, i && i.kill(), c = Math.round(r), t[p] = e, (t.modifiers = s)[p] = function (e) {
        return (e = Math.round(f())) !== c && e !== u && 3 < Math.abs(e - c) && 3 < Math.abs(e - u) ? (i.kill(), Uj.tween = 0) : e = r + n * i.ratio + o * i.ratio * i.ratio, u = c, c = Math.round(e);
      }, t.onUpdate = function () {
        ze.cache++, j();
      }, t.onComplete = function () {
        Uj.tween = 0, a && a.call(i);
      }, i = Uj.tween = He.to(l, t);
    }
    var c,
      u,
      f = K(l, e),
      p = "_scroll" + e.p2;
    return (l[p] = f).wheelHandler = function () {
      return Uj.tween && Uj.tween.kill() && (Uj.tween = 0);
    }, ob(l, "wheel", f.wheelHandler), Uj;
  }
  var He,
    s,
    Je,
    je,
    qe,
    Ge,
    l,
    c,
    et,
    tt,
    rt,
    u,
    nt,
    ot,
    f,
    it,
    p,
    d,
    g,
    at,
    st,
    h,
    v,
    b,
    m,
    y,
    k,
    lt,
    x,
    ct,
    w,
    ut,
    ft,
    pt,
    dt = 1,
    gt = Date.now,
    _ = gt(),
    ht = 0,
    vt = 0,
    bt = Math.abs,
    T = "right",
    S = "bottom",
    mt = "width",
    yt = "height",
    xt = "Right",
    wt = "Left",
    _t = "Top",
    Tt = "Bottom",
    St = "padding",
    Ct = "margin",
    Et = "Width",
    D = "Height",
    kt = "px",
    Mt = function _getBounds(e, t) {
      var r = t && "matrix(1, 0, 0, 1, 0, 0)" !== eb(e)[f] && He.to(e, {
          x: 0,
          y: 0,
          xPercent: 0,
          yPercent: 0,
          rotation: 0,
          rotationX: 0,
          rotationY: 0,
          scale: 1,
          skewX: 0,
          skewY: 0
        }).progress(1),
        n = e.getBoundingClientRect();
      return r && r.progress(0).kill(), n;
    },
    Pt = {
      startColor: "green",
      endColor: "red",
      indent: 0,
      fontSize: "16px",
      fontWeight: "normal"
    },
    Ot = {
      toggleActions: "play",
      anticipatePin: 0
    },
    I = {
      top: 0,
      left: 0,
      center: .5,
      bottom: 1,
      right: 1
    },
    R = function _positionMarker(e, t, r, n) {
      var o = {
          display: "block"
        },
        i = r[n ? "os2" : "p2"],
        a = r[n ? "p2" : "os2"];
      e._isFlipped = n, o[r.a + "Percent"] = n ? -100 : 0, o[r.a] = n ? "1px" : 0, o["border" + i + Et] = 1, o["border" + a + Et] = 0, o[r.p] = t + "px", He.set(e, o);
    },
    At = [],
    Bt = {},
    Y = {},
    X = [],
    W = function _dispatch(e) {
      return Y[e] && Y[e].map(function (e) {
        return e();
      }) || X;
    },
    H = [],
    Dt = 0,
    It = function _refreshAll(e, t) {
      if (!ht || e) {
        ut = Q.isRefreshing = !0, ze.forEach(function (e) {
          return La(e) && e.cacheID++ && (e.rec = e());
        });
        var r = W("refreshInit");
        at && Q.sort(), t || Kb(), ze.forEach(function (e) {
          La(e) && (e.smooth && (e.target.style.scrollBehavior = "auto"), e(0));
        }), At.slice(0).forEach(function (e) {
          return e.refresh();
        }), At.forEach(function (e, t) {
          if (e._subPinOffset && e.pin) {
            var r = e.vars.horizontal ? "offsetWidth" : "offsetHeight",
              n = e.pin[r];
            e.revert(!0, 1), e.adjustPinSpacing(e.pin[r] - n), e.revert(!1, 1);
          }
        }), At.forEach(function (e) {
          return "max" === e.vars.end && e.setPositions(e.start, Math.max(e.start + 1, Ia(e.scroller, e._dir)));
        }), r.forEach(function (e) {
          return e && e.render && e.render(-1);
        }), ze.forEach(function (e) {
          La(e) && (e.smooth && requestAnimationFrame(function () {
            return e.target.style.scrollBehavior = "smooth";
          }), e.rec && e(e.rec));
        }), Lb(x, 1), c.pause(), Dt++, j(2), At.forEach(function (e) {
          return La(e.vars.onRefresh) && e.vars.onRefresh(e);
        }), ut = Q.isRefreshing = !1, W("refresh");
      } else ob(Q, "scrollEnd", Gb);
    },
    U = 0,
    Lt = 1,
    j = function _updateAll(e) {
      if (!ut || 2 === e) {
        Q.isUpdating = !0, pt && pt.update(0);
        var t = At.length,
          r = gt(),
          n = 50 <= r - _,
          o = t && At[0].scroll();
        if (Lt = o < U ? -1 : 1, U = o, n && (ht && !ot && 200 < r - ht && (ht = 0, W("scrollEnd")), rt = _, _ = r), Lt < 0) {
          for (it = t; 0 < it--;) At[it] && At[it].update(0, n);
          Lt = 1;
        } else for (it = 0; it < t; it++) At[it] && At[it].update(0, n);
        Q.isUpdating = !1;
      }
      w = 0;
    },
    q = ["left", "top", S, T, Ct + Tt, Ct + xt, Ct + _t, Ct + wt, "display", "flexShrink", "float", "zIndex", "gridColumnStart", "gridColumnEnd", "gridRowStart", "gridRowEnd", "gridArea", "justifySelf", "alignSelf", "placeSelf", "order"],
    V = q.concat([mt, yt, "boxSizing", "max" + Et, "max" + D, "position", Ct, St, St + _t, St + xt, St + Tt, St + wt]),
    Z = /([A-Z])/g,
    Rt = function _setState(e) {
      if (e) {
        var t,
          r,
          n = e.t.style,
          o = e.length,
          i = 0;
        for ((e.t._gsap || He.core.getCache(e.t)).uncache = 1; i < o; i += 2) r = e[i + 1], t = e[i], r ? n[t] = r : n[t] && n.removeProperty(t.replace(Z, "-$1").toLowerCase());
      }
    },
    Yt = {
      left: 0,
      top: 0
    },
    $ = /(webkit|moz|length|cssText|inset)/i,
    Q = (ScrollTrigger.prototype.init = function init(S, C) {
      if (this.progress = this.start = 0, this.vars && this.kill(!0, !0), vt) {
        var E,
          n,
          d,
          k,
          M,
          P,
          O,
          A,
          B,
          D,
          I,
          e,
          L,
          R,
          Y,
          F,
          N,
          t,
          X,
          b,
          W,
          H,
          m,
          U,
          y,
          j,
          x,
          r,
          w,
          _,
          q,
          o,
          g,
          V,
          G,
          Z,
          $,
          T,
          i,
          Q = (S = gb(Ka(S) || Ma(S) || S.nodeType ? {
            trigger: S
          } : S, Ot)).onUpdate,
          ee = S.toggleClass,
          a = S.id,
          te = S.onToggle,
          re = S.onRefresh,
          ne = S.scrub,
          oe = S.trigger,
          ie = S.pin,
          ae = S.pinSpacing,
          se = S.invalidateOnRefresh,
          le = S.anticipatePin,
          s = S.onScrubComplete,
          h = S.onSnapComplete,
          ce = S.once,
          ue = S.snap,
          fe = S.pinReparent,
          l = S.pinSpacer,
          pe = S.containerAnimation,
          de = S.fastScrollEnd,
          ge = S.preventOverlaps,
          he = S.horizontal || S.containerAnimation && !1 !== S.horizontal ? Xe : Ke,
          ve = !ne && 0 !== ne,
          be = J(S.scroller || Je),
          c = He.core.getCache(be),
          me = Ea(be),
          ye = "fixed" === ("pinType" in S ? S.pinType : z(be, "pinType") || me && "fixed"),
          xe = [S.onEnter, S.onLeave, S.onEnterBack, S.onLeaveBack],
          we = ve && S.toggleActions.split(" "),
          u = "markers" in S ? S.markers : Ot.markers,
          _e = me ? 0 : parseFloat(eb(be)["border" + he.p2 + Et]) || 0,
          Te = this,
          Se = S.onRefreshInit && function () {
            return S.onRefreshInit(Te);
          },
          Ce = function _getSizeFunc(e, t, r) {
            var n = r.d,
              o = r.d2,
              i = r.a;
            return (i = z(e, "getBoundingClientRect")) ? function () {
              return i()[n];
            } : function () {
              return (t ? Je["inner" + o] : e["client" + o]) || 0;
            };
          }(be, me, he),
          Ee = function _getOffsetsFunc(e, t) {
            return !t || ~Fe.indexOf(e) ? Fa(e) : function () {
              return Yt;
            };
          }(be, me),
          ke = 0,
          Me = 0,
          Pe = K(be, he);
        if (lt(Te), Te._dir = he, le *= 45, Te.scroller = be, Te.scroll = pe ? pe.time.bind(pe) : Pe, k = Pe(), Te.vars = S, C = C || S.animation, "refreshPriority" in S && (at = 1, -9999 === S.refreshPriority && (pt = Te)), c.tweenScroll = c.tweenScroll || {
          top: fc(be, Ke),
          left: fc(be, Xe)
        }, Te.tweenTo = E = c.tweenScroll[he.p], Te.scrubDuration = function (e) {
          (o = Ma(e) && e) ? q ? q.duration(e) : q = He.to(C, {
            ease: "expo",
            totalProgress: "+=0.001",
            duration: o,
            paused: !0,
            onComplete: function onComplete() {
              return s && s(Te);
            }
          }) : (q && q.progress(1).kill(), q = 0);
        }, C && (C.vars.lazy = !1, C._initted || !1 !== C.vars.immediateRender && !1 !== S.immediateRender && C.duration() && C.render(0, !0, !0), Te.animation = C.pause(), (C.scrollTrigger = Te).scrubDuration(ne), w = 0, a = a || C.vars.id), At.push(Te), ue && (Na(ue) && !ue.push || (ue = {
          snapTo: ue
        }), "scrollBehavior" in Ge.style && He.set(me ? [Ge, qe] : be, {
          scrollBehavior: "auto"
        }), ze.forEach(function (e) {
          return La(e) && e.target === (me ? je.scrollingElement || qe : be) && (e.smooth = !1);
        }), d = La(ue.snapTo) ? ue.snapTo : "labels" === ue.snapTo ? function _getClosestLabel(t) {
          return function (e) {
            return He.utils.snap(jb(t), e);
          };
        }(C) : "labelsDirectional" === ue.snapTo ? function _getLabelAtDirection(r) {
          return function (e, t) {
            return lb(jb(r))(e, t.direction);
          };
        }(C) : !1 !== ue.directional ? function (e, t) {
          return lb(ue.snapTo)(e, gt() - Me < 500 ? 0 : t.direction);
        } : He.utils.snap(ue.snapTo), g = ue.duration || {
          min: .1,
          max: 2
        }, g = Na(g) ? tt(g.min, g.max) : tt(g, g), V = He.delayedCall(ue.delay || o / 2 || .1, function () {
          var e = Pe(),
            t = gt() - Me < 500,
            r = E.tween;
          if (!(t || Math.abs(Te.getVelocity()) < 10) || r || ot || ke === e) Te.isActive && ke !== e && V.restart(!0);else {
            var n = (e - P) / L,
              o = C && !ve ? C.totalProgress() : n,
              i = t ? 0 : (o - _) / (gt() - rt) * 1e3 || 0,
              a = He.utils.clamp(-n, 1 - n, bt(i / 2) * i / .185),
              s = n + (!1 === ue.inertia ? 0 : a),
              l = tt(0, 1, d(s, Te)),
              c = Math.round(P + l * L),
              u = ue.onStart,
              f = ue.onInterrupt,
              p = ue.onComplete;
            if (e <= O && P <= e && c !== e) {
              if (r && !r._initted && r.data <= bt(c - e)) return;
              !1 === ue.inertia && (a = l - n), E(c, {
                duration: g(bt(.185 * Math.max(bt(s - o), bt(l - o)) / i / .05 || 0)),
                ease: ue.ease || "power3",
                data: bt(c - e),
                onInterrupt: function onInterrupt() {
                  return V.restart(!0) && f && f(Te);
                },
                onComplete: function onComplete() {
                  Te.update(), ke = Pe(), w = _ = C && !ve ? C.totalProgress() : Te.progress, h && h(Te), p && p(Te);
                }
              }, e, a * L, c - e - a * L), u && u(Te, E.tween);
            }
          }
        }).pause()), a && (Bt[a] = Te), i = (i = (oe = Te.trigger = J(oe || ie)) && oe._gsap && oe._gsap.stRevert) && i(Te), ie = !0 === ie ? oe : J(ie), Ka(ee) && (ee = {
          targets: oe,
          className: ee
        }), ie && (!1 === ae || ae === Ct || (ae = !(!ae && ie.parentNode && ie.parentNode.style && "flex" === eb(ie.parentNode).display) && St), Te.pin = ie, (n = He.core.getCache(ie)).spacer ? R = n.pinState : (l && ((l = J(l)) && !l.nodeType && (l = l.current || l.nativeElement), n.spacerIsNative = !!l, l && (n.spacerState = _b(l))), n.spacer = N = l || je.createElement("div"), N.classList.add("pin-spacer"), a && N.classList.add("pin-spacer-" + a), n.pinState = R = _b(ie)), !1 !== S.force3D && He.set(ie, {
          force3D: !0
        }), Te.spacer = N = n.spacer, r = eb(ie), m = r[ae + he.os2], X = He.getProperty(ie), b = He.quickSetter(ie, he.a, kt), Yb(ie, N, r), F = _b(ie)), u) {
          e = Na(u) ? gb(u, Pt) : Pt, D = vb("scroller-start", a, be, he, e, 0), I = vb("scroller-end", a, be, he, e, 0, D), t = D["offset" + he.op.d2];
          var f = J(z(be, "content") || be);
          A = this.markerStart = vb("start", a, f, he, e, t, 0, pe), B = this.markerEnd = vb("end", a, f, he, e, t, 0, pe), pe && (T = He.quickSetter([A, B], he.a, kt)), ye || Fe.length && !0 === z(be, "fixedMarkers") || (function _makePositionable(e) {
            var t = eb(e).position;
            e.style.position = "absolute" === t || "fixed" === t ? t : "relative";
          }(me ? Ge : be), He.set([D, I], {
            force3D: !0
          }), y = He.quickSetter(D, he.a, kt), x = He.quickSetter(I, he.a, kt));
        }
        if (pe) {
          var p = pe.vars.onUpdate,
            v = pe.vars.onUpdateParams;
          pe.eventCallback("onUpdate", function () {
            Te.update(0, 0, 1), p && p.apply(v || []);
          });
        }
        Te.previous = function () {
          return At[At.indexOf(Te) - 1];
        }, Te.next = function () {
          return At[At.indexOf(Te) + 1];
        }, Te.revert = function (e, t) {
          if (!t) return Te.kill(!0);
          var r = !1 !== e || !Te.enabled,
            n = nt;
          r !== Te.isReverted && (r && (Z = Math.max(Pe(), Te.scroll.rec || 0), G = Te.progress, $ = C && C.progress()), A && [A, B, D, I].forEach(function (e) {
            return e.style.display = r ? "none" : "block";
          }), r && (nt = 1, Te.update(r)), !ie || fe && Te.isActive || (r ? function _swapPinOut(e, t, r) {
            Rt(r);
            var n = e._gsap;
            if (n.spacerIsNative) Rt(n.spacerState);else if (e._gsap.swappedIn) {
              var o = t.parentNode;
              o && (o.insertBefore(e, t), o.removeChild(t));
            }
            e._gsap.swappedIn = !1;
          }(ie, N, R) : Yb(ie, N, eb(ie), U)), r || Te.update(r), nt = n, Te.isReverted = r);
        }, Te.refresh = function (e, t) {
          if (!nt && Te.enabled || t) if (ie && e && ht) ob(ScrollTrigger, "scrollEnd", Gb);else {
            !ut && Se && Se(Te), nt = 1, Me = gt(), E.tween && (E.tween.kill(), E.tween = 0), q && q.pause(), se && C && C.revert({
              kill: !1
            }).invalidate(), Te.isReverted || Te.revert(!0, !0), Te._subPinOffset = !1;
            for (var r, n, o, i, a, s, l, c, u, f, p, d = Ce(), g = Ee(), h = pe ? pe.duration() : Ia(be, he), v = 0, b = 0, m = S.end, y = S.endTrigger || oe, x = S.start || (0 !== S.start && oe ? ie ? "0 0" : "0 100%" : 0), w = Te.pinnedContainer = S.pinnedContainer && J(S.pinnedContainer), _ = oe && Math.max(0, At.indexOf(Te)) || 0, T = _; T--;) (s = At[T]).end || s.refresh(0, 1) || (nt = 1), !(l = s.pin) || l !== oe && l !== ie || s.isReverted || ((f = f || []).unshift(s), s.revert(!0, !0)), s !== At[T] && (_--, T--);
            for (La(x) && (x = x(Te)), P = cc(x, oe, d, he, Pe(), A, D, Te, g, _e, ye, h, pe) || (ie ? -.001 : 0), La(m) && (m = m(Te)), Ka(m) && !m.indexOf("+=") && (~m.indexOf(" ") ? m = (Ka(x) ? x.split(" ")[0] : "") + m : (v = ub(m.substr(2), d), m = Ka(x) ? x : P + v, y = oe)), O = Math.max(P, cc(m || (y ? "100% 0" : h), y, d, he, Pe() + v, B, I, Te, g, _e, ye, h, pe)) || -.001, L = O - P || (P -= .01) && .001, v = 0, T = _; T--;) (l = (s = At[T]).pin) && s.start - s._pinPush <= P && !pe && 0 < s.end && (r = s.end - s.start, (l === oe && s.start - s._pinPush < P || l === w) && !Ma(x) && (v += r * (1 - s.progress)), l === ie && (b += r));
            if (P += v, O += v, Te._pinPush = b, A && v && ((r = {})[he.a] = "+=" + v, w && (r[he.p] = "-=" + Pe()), He.set([A, B], r)), ie) r = eb(ie), i = he === Ke, o = Pe(), W = parseFloat(X(he.a)) + b, !h && 1 < O && ((p = {
              style: p = (me ? je.scrollingElement || qe : be).style,
              value: p["overflow" + he.a.toUpperCase()]
            })["overflow" + he.a.toUpperCase()] = "scroll"), Yb(ie, N, r), F = _b(ie), n = Mt(ie, !0), c = ye && K(be, i ? Xe : Ke)(), ae && ((U = [ae + he.os2, L + b + kt]).t = N, (T = ae === St ? ib(ie, he) + L + b : 0) && U.push(he.d, T + kt), Rt(U), w && At.forEach(function (e) {
              e.pin === w && !1 !== e.vars.pinSpacing && (e._subPinOffset = !0);
            }), ye && Pe(Z)), ye && ((a = {
              top: n.top + (i ? o - P : c) + kt,
              left: n.left + (i ? c : o - P) + kt,
              boxSizing: "border-box",
              position: "fixed"
            })[mt] = a.maxWidth = Math.ceil(n.width) + kt, a[yt] = a.maxHeight = Math.ceil(n.height) + kt, a[Ct] = a[Ct + _t] = a[Ct + xt] = a[Ct + Tt] = a[Ct + wt] = "0", a[St] = r[St], a[St + _t] = r[St + _t], a[St + xt] = r[St + xt], a[St + Tt] = r[St + Tt], a[St + wt] = r[St + wt], Y = function _copyState(e, t, r) {
              for (var n, o = [], i = e.length, a = r ? 8 : 0; a < i; a += 2) n = e[a], o.push(n, n in t ? t[n] : e[a + 1]);
              return o.t = e.t, o;
            }(R, a, fe), ut && Pe(0)), C ? (u = C._initted, st(1), C.render(C.duration(), !0, !0), H = X(he.a) - W + L + b, j = 1 < Math.abs(L - H), ye && j && Y.splice(Y.length - 2, 2), C.render(0, !0, !0), u || C.invalidate(!0), C.parent || C.totalTime(C.totalTime()), st(0)) : H = L, p && (p.value ? p.style["overflow" + he.a.toUpperCase()] = p.value : p.style.removeProperty("overflow-" + he.a));else if (oe && Pe() && !pe) for (n = oe.parentNode; n && n !== Ge;) n._pinOffset && (P -= n._pinOffset, O -= n._pinOffset), n = n.parentNode;
            f && f.forEach(function (e) {
              return e.revert(!1, !0);
            }), Te.start = P, Te.end = O, k = M = ut ? Z : Pe(), pe || ut || (k < Z && Pe(Z), Te.scroll.rec = 0), Te.revert(!1, !0), V && (ke = -1, Te.isActive && Pe(P + L * G), V.restart(!0)), nt = 0, C && ve && (C._initted || $) && C.progress() !== $ && C.progress($, !0).render(C.time(), !0, !0), G === Te.progress && !pe || (C && !ve && C.totalProgress(G, !0), Te.progress = (k - P) / L === G ? 0 : G), ie && ae && (N._pinOffset = Math.round(Te.progress * H)), re && !ut && re(Te);
          }
        }, Te.getVelocity = function () {
          return (Pe() - M) / (gt() - rt) * 1e3 || 0;
        }, Te.endAnimation = function () {
          Oa(Te.callbackAnimation), C && (q ? q.progress(1) : C.paused() ? ve || Oa(C, Te.direction < 0, 1) : Oa(C, C.reversed()));
        }, Te.labelToScroll = function (e) {
          return C && C.labels && (P || Te.refresh() || P) + C.labels[e] / C.duration() * L || 0;
        }, Te.getTrailing = function (t) {
          var e = At.indexOf(Te),
            r = 0 < Te.direction ? At.slice(0, e).reverse() : At.slice(e + 1);
          return (Ka(t) ? r.filter(function (e) {
            return e.vars.preventOverlaps === t;
          }) : r).filter(function (e) {
            return 0 < Te.direction ? e.end <= P : e.start >= O;
          });
        }, Te.update = function (e, t, r) {
          if (!pe || r || e) {
            var n,
              o,
              i,
              a,
              s,
              l,
              c,
              u = ut ? Z : Te.scroll(),
              f = e ? 0 : (u - P) / L,
              p = f < 0 ? 0 : 1 < f ? 1 : f || 0,
              d = Te.progress;
            if (t && (M = k, k = pe ? Pe() : u, ue && (_ = w, w = C && !ve ? C.totalProgress() : p)), le && !p && ie && !nt && !dt && ht && P < u + (u - M) / (gt() - rt) * le && (p = 1e-4), p !== d && Te.enabled) {
              if (a = (s = (n = Te.isActive = !!p && p < 1) != (!!d && d < 1)) || !!p != !!d, Te.direction = d < p ? 1 : -1, Te.progress = p, a && !nt && (o = p && !d ? 0 : 1 === p ? 1 : 1 === d ? 2 : 3, ve && (i = !s && "none" !== we[o + 1] && we[o + 1] || we[o], c = C && ("complete" === i || "reset" === i || i in C))), ge && (s || c) && (c || ne || !C) && (La(ge) ? ge(Te) : Te.getTrailing(ge).forEach(function (e) {
                return e.endAnimation();
              })), ve || (!q || nt || dt ? C && C.totalProgress(p, !!nt) : (q._dp._time - q._start !== q._time && q.render(q._dp._time - q._start), q.resetTo ? q.resetTo("totalProgress", p, C._tTime / C._tDur) : (q.vars.totalProgress = p, q.invalidate().restart()))), ie) if (e && ae && (N.style[ae + he.os2] = m), ye) {
                if (a) {
                  if (l = !e && d < p && u < O + 1 && u + 1 >= Ia(be, he), fe) if (e || !n && !l) ec(ie, N);else {
                    var g = Mt(ie, !0),
                      h = u - P;
                    ec(ie, Ge, g.top + (he === Ke ? h : 0) + kt, g.left + (he === Ke ? 0 : h) + kt);
                  }
                  Rt(n || l ? Y : F), j && p < 1 && n || b(W + (1 !== p || l ? 0 : H));
                }
              } else b(Ba(W + H * p));
              !ue || E.tween || nt || dt || V.restart(!0), ee && (s || ce && p && (p < 1 || !ct)) && et(ee.targets).forEach(function (e) {
                return e.classList[n || ce ? "add" : "remove"](ee.className);
              }), !Q || ve || e || Q(Te), a && !nt ? (ve && (c && ("complete" === i ? C.pause().totalProgress(1) : "reset" === i ? C.restart(!0).pause() : "restart" === i ? C.restart(!0) : C[i]()), Q && Q(Te)), !s && ct || (te && s && Pa(Te, te), xe[o] && Pa(Te, xe[o]), ce && (1 === p ? Te.kill(!1, 1) : xe[o] = 0), s || xe[o = 1 === p ? 1 : 3] && Pa(Te, xe[o])), de && !n && Math.abs(Te.getVelocity()) > (Ma(de) ? de : 2500) && (Oa(Te.callbackAnimation), q ? q.progress(1) : Oa(C, "reverse" === i ? 1 : !p, 1))) : ve && Q && !nt && Q(Te);
            }
            if (x) {
              var v = pe ? u / pe.duration() * (pe._caScrollDist || 0) : u;
              y(v + (D._isFlipped ? 1 : 0)), x(v);
            }
            T && T(-u / pe.duration() * (pe._caScrollDist || 0));
          }
        }, Te.enable = function (e, t) {
          Te.enabled || (Te.enabled = !0, ob(be, "resize", Db), ob(me ? je : be, "scroll", Bb), Se && ob(ScrollTrigger, "refreshInit", Se), !1 !== e && (Te.progress = G = 0, k = M = ke = Pe()), !1 !== t && Te.refresh());
        }, Te.getTween = function (e) {
          return e && E ? E.tween : q;
        }, Te.setPositions = function (e, t) {
          ie && (W += e - P, H += t - e - L, ae === St && Te.adjustPinSpacing(t - e - L)), Te.start = P = e, Te.end = O = t, L = t - e, Te.update();
        }, Te.adjustPinSpacing = function (e) {
          if (U) {
            var t = U.indexOf(he.d) + 1;
            U[t] = parseFloat(U[t]) + e + kt, U[1] = parseFloat(U[1]) + e + kt, Rt(U);
          }
        }, Te.disable = function (e, t) {
          if (Te.enabled && (!1 !== e && Te.revert(!0, !0), Te.enabled = Te.isActive = !1, t || q && q.pause(), Z = 0, n && (n.uncache = 1), Se && pb(ScrollTrigger, "refreshInit", Se), V && (V.pause(), E.tween && E.tween.kill() && (E.tween = 0)), !me)) {
            for (var r = At.length; r--;) if (At[r].scroller === be && At[r] !== Te) return;
            pb(be, "resize", Db), pb(be, "scroll", Bb);
          }
        }, Te.kill = function (e, t) {
          Te.disable(e, t), q && !t && q.kill(), a && delete Bt[a];
          var r = At.indexOf(Te);
          0 <= r && At.splice(r, 1), r === it && 0 < Lt && it--, r = 0, At.forEach(function (e) {
            return e.scroller === Te.scroller && (r = 1);
          }), r || ut || (Te.scroll.rec = 0), C && (C.scrollTrigger = null, e && C.revert({
            kill: !1
          }), t || C.kill()), A && [A, B, D, I].forEach(function (e) {
            return e.parentNode && e.parentNode.removeChild(e);
          }), pt === Te && (pt = 0), ie && (n && (n.uncache = 1), r = 0, At.forEach(function (e) {
            return e.pin === ie && r++;
          }), r || (n.spacer = 0)), S.onKill && S.onKill(Te);
        }, Te.enable(!1, !1), i && i(Te), C && C.add && !L ? He.delayedCall(.01, function () {
          return P || O || Te.refresh();
        }) && (L = .01) && (P = O = 0) : Te.refresh(), ie && function _queueRefreshAll() {
          if (ft !== Dt) {
            var e = ft = Dt;
            requestAnimationFrame(function () {
              return e === Dt && It(!0);
            });
          }
        }();
      } else this.update = this.refresh = this.kill = Aa;
    }, ScrollTrigger.register = function register(e) {
      return s || (He = e || Da(), Ca() && window.document && ScrollTrigger.enable(), s = vt), s;
    }, ScrollTrigger.defaults = function defaults(e) {
      if (e) for (var t in e) Ot[t] = e[t];
      return Ot;
    }, ScrollTrigger.disable = function disable(t, r) {
      vt = 0, At.forEach(function (e) {
        return e[r ? "kill" : "disable"](t);
      }), pb(Je, "wheel", Bb), pb(je, "scroll", Bb), clearInterval(u), pb(je, "touchcancel", Aa), pb(Ge, "touchstart", Aa), nb(pb, je, "pointerdown,touchstart,mousedown", ya), nb(pb, je, "pointerup,touchend,mouseup", za), c.kill(), Ja(pb);
      for (var e = 0; e < ze.length; e += 3) qb(pb, ze[e], ze[e + 1]), qb(pb, ze[e], ze[e + 2]);
    }, ScrollTrigger.enable = function enable() {
      if (Je = window, je = document, qe = je.documentElement, Ge = je.body, He && (et = He.utils.toArray, tt = He.utils.clamp, lt = He.core.context || Aa, st = He.core.suppressOverwrites || Aa, x = Je.history.scrollRestoration || "auto", He.core.globals("ScrollTrigger", ScrollTrigger), Ge)) {
        vt = 1, E.register(He), ScrollTrigger.isTouch = E.isTouch, k = E.isTouch && /(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent), ob(Je, "wheel", Bb), l = [Je, je, qe, Ge], He.matchMedia ? (ScrollTrigger.matchMedia = function (e) {
          var t,
            r = He.matchMedia();
          for (t in e) r.add(t, e[t]);
          return r;
        }, He.addEventListener("matchMediaInit", function () {
          return Kb();
        }), He.addEventListener("matchMediaRevert", function () {
          return Jb();
        }), He.addEventListener("matchMedia", function () {
          It(0, 1), W("matchMedia");
        }), He.matchMedia("(orientation: portrait)", function () {
          return Cb(), Cb;
        })) : console.warn("Requires GSAP 3.11.0 or later"), Cb(), ob(je, "scroll", Bb);
        var e,
          t,
          r = Ge.style,
          n = r.borderTopStyle,
          o = He.core.Animation.prototype;
        for (o.revert || Object.defineProperty(o, "revert", {
          value: function value() {
            return this.time(-.01, !0);
          }
        }), r.borderTopStyle = "solid", e = Mt(Ge), Ke.m = Math.round(e.top + Ke.sc()) || 0, Xe.m = Math.round(e.left + Xe.sc()) || 0, n ? r.borderTopStyle = n : r.removeProperty("border-top-style"), u = setInterval(Ab, 250), He.delayedCall(.5, function () {
          return dt = 0;
        }), ob(je, "touchcancel", Aa), ob(Ge, "touchstart", Aa), nb(ob, je, "pointerdown,touchstart,mousedown", ya), nb(ob, je, "pointerup,touchend,mouseup", za), f = He.utils.checkPrefix("transform"), V.push(f), s = gt(), c = He.delayedCall(.2, It).pause(), g = [je, "visibilitychange", function () {
          var e = Je.innerWidth,
            t = Je.innerHeight;
          je.hidden ? (p = e, d = t) : p === e && d === t || Db();
        }, je, "DOMContentLoaded", It, Je, "load", It, Je, "resize", Db], Ja(ob), At.forEach(function (e) {
          return e.enable(0, 1);
        }), t = 0; t < ze.length; t += 3) qb(pb, ze[t], ze[t + 1]), qb(pb, ze[t], ze[t + 2]);
      }
    }, ScrollTrigger.config = function config(e) {
      "limitCallbacks" in e && (ct = !!e.limitCallbacks);
      var t = e.syncInterval;
      t && clearInterval(u) || (u = t) && setInterval(Ab, t), "ignoreMobileResize" in e && (b = 1 === ScrollTrigger.isTouch && e.ignoreMobileResize), "autoRefreshEvents" in e && (Ja(pb) || Ja(ob, e.autoRefreshEvents || "none"), h = -1 === (e.autoRefreshEvents + "").indexOf("resize"));
    }, ScrollTrigger.scrollerProxy = function scrollerProxy(e, t) {
      var r = J(e),
        n = ze.indexOf(r),
        o = Ea(r);
      ~n && ze.splice(n, o ? 6 : 2), t && (o ? Fe.unshift(Je, t, Ge, t, qe, t) : Fe.unshift(r, t));
    }, ScrollTrigger.clearMatchMedia = function clearMatchMedia(t) {
      At.forEach(function (e) {
        return e._ctx && e._ctx.query === t && e._ctx.kill(!0, !0);
      });
    }, ScrollTrigger.isInViewport = function isInViewport(e, t, r) {
      var n = (Ka(e) ? J(e) : e).getBoundingClientRect(),
        o = n[r ? mt : yt] * t || 0;
      return r ? 0 < n.right - o && n.left + o < Je.innerWidth : 0 < n.bottom - o && n.top + o < Je.innerHeight;
    }, ScrollTrigger.positionInViewport = function positionInViewport(e, t, r) {
      Ka(e) && (e = J(e));
      var n = e.getBoundingClientRect(),
        o = n[r ? mt : yt],
        i = null == t ? o / 2 : t in I ? I[t] * o : ~t.indexOf("%") ? parseFloat(t) * o / 100 : parseFloat(t) || 0;
      return r ? (n.left + i) / Je.innerWidth : (n.top + i) / Je.innerHeight;
    }, ScrollTrigger.killAll = function killAll(e) {
      if (At.slice(0).forEach(function (e) {
        return "ScrollSmoother" !== e.vars.id && e.kill();
      }), !0 !== e) {
        var t = Y.killAll || [];
        Y = {}, t.forEach(function (e) {
          return e();
        });
      }
    }, ScrollTrigger);
  function ScrollTrigger(e, t) {
    s || ScrollTrigger.register(He) || console.warn("Please gsap.registerPlugin(ScrollTrigger)"), this.init(e, t);
  }
  Q.version = "3.11.4", Q.saveStyles = function (e) {
    return e ? et(e).forEach(function (e) {
      if (e && e.style) {
        var t = H.indexOf(e);
        0 <= t && H.splice(t, 5), H.push(e, e.style.cssText, e.getBBox && e.getAttribute("transform"), He.core.getCache(e), lt());
      }
    }) : H;
  }, Q.revert = function (e, t) {
    return Kb(!e, t);
  }, Q.create = function (e, t) {
    return new Q(e, t);
  }, Q.refresh = function (e) {
    return e ? Db() : (s || Q.register()) && It(!0);
  }, Q.update = function (e) {
    return ++ze.cache && j(!0 === e ? 2 : 0);
  }, Q.clearScrollMemory = Lb, Q.maxScroll = function (e, t) {
    return Ia(e, t ? Xe : Ke);
  }, Q.getScrollFunc = function (e, t) {
    return K(J(e), t ? Xe : Ke);
  }, Q.getById = function (e) {
    return Bt[e];
  }, Q.getAll = function () {
    return At.filter(function (e) {
      return "ScrollSmoother" !== e.vars.id;
    });
  }, Q.isScrolling = function () {
    return !!ht;
  }, Q.snapDirectional = lb, Q.addEventListener = function (e, t) {
    var r = Y[e] || (Y[e] = []);
    ~r.indexOf(t) || r.push(t);
  }, Q.removeEventListener = function (e, t) {
    var r = Y[e],
      n = r && r.indexOf(t);
    0 <= n && r.splice(n, 1);
  }, Q.batch = function (e, t) {
    function Io(e, t) {
      var r = [],
        n = [],
        o = He.delayedCall(i, function () {
          t(r, n), r = [], n = [];
        }).pause();
      return function (e) {
        r.length || o.restart(!0), r.push(e.trigger), n.push(e), a <= r.length && o.progress(1);
      };
    }
    var r,
      n = [],
      o = {},
      i = t.interval || .016,
      a = t.batchMax || 1e9;
    for (r in t) o[r] = "on" === r.substr(0, 2) && La(t[r]) && "onRefreshInit" !== r ? Io(0, t[r]) : t[r];
    return La(a) && (a = a(), ob(Q, "refresh", function () {
      return a = t.batchMax();
    })), et(e).forEach(function (e) {
      var t = {};
      for (r in o) t[r] = o[r];
      t.trigger = e, n.push(Q.create(t));
    }), n;
  };
  function hc(e, t, r, n) {
    return n < t ? e(n) : t < 0 && e(0), n < r ? (n - t) / (r - t) : r < 0 ? t / (t - r) : 1;
  }
  function ic(e, t) {
    !0 === t ? e.style.removeProperty("touch-action") : e.style.touchAction = !0 === t ? "auto" : t ? "pan-" + t + (E.isTouch ? " pinch-zoom" : "") : "none", e === qe && ic(Ge, t);
  }
  function kc(e) {
    var t,
      r = e.event,
      n = e.target,
      o = e.axis,
      i = (r.changedTouches ? r.changedTouches[0] : r).target,
      a = i._gsap || He.core.getCache(i),
      s = gt();
    if (!a._isScrollT || 2e3 < s - a._isScrollT) {
      for (; i && i !== Ge && (i.scrollHeight <= i.clientHeight && i.scrollWidth <= i.clientWidth || !te[(t = eb(i)).overflowY] && !te[t.overflowX]);) i = i.parentNode;
      a._isScroll = i && i !== n && !Ea(i) && (te[(t = eb(i)).overflowY] || te[t.overflowX]), a._isScrollT = s;
    }
    !a._isScroll && "x" !== o || (r.stopPropagation(), r._gsapAllow = !0);
  }
  function lc(e, t, r, n) {
    return E.create({
      target: e,
      capture: !0,
      debounce: !1,
      lockAxis: !0,
      type: t,
      onWheel: n = n && kc,
      onPress: n,
      onDrag: n,
      onScroll: n,
      onEnable: function onEnable() {
        return r && ob(je, E.eventTypes[0], ne, !1, !0);
      },
      onDisable: function onDisable() {
        return pb(je, E.eventTypes[0], ne, !0);
      }
    });
  }
  function pc(e) {
    function Ep() {
      return o = !1;
    }
    function Hp() {
      i = Ia(p, Ke), S = tt(k ? 1 : 0, i), f && (T = tt(0, Ia(p, Xe))), l = Dt;
    }
    function Ip() {
      h._gsap.y = Ba(parseFloat(h._gsap.y) + v.offset) + "px", h.style.transform = "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, " + parseFloat(h._gsap.y) + ", 0, 1)", v.offset = v.cacheID = 0;
    }
    function Op() {
      Hp(), a.isActive() && a.vars.scrollY > i && (v() > i ? a.progress(1) && v(i) : a.resetTo("scrollY", i));
    }
    Na(e) || (e = {}), e.preventDefault = e.isNormalizer = e.allowClicks = !0, e.type || (e.type = "wheel,touch"), e.debounce = !!e.debounce, e.id = e.id || "normalizer";
    var n,
      i,
      l,
      o,
      a,
      c,
      u,
      s,
      f = e.normalizeScrollX,
      t = e.momentum,
      r = e.allowNestedScroll,
      p = J(e.target) || qe,
      d = He.core.globals().ScrollSmoother,
      g = d && d.get(),
      h = k && (e.content && J(e.content) || g && !1 !== e.content && !g.smooth() && g.content()),
      v = K(p, Ke),
      b = K(p, Xe),
      m = 1,
      y = (E.isTouch && Je.visualViewport ? Je.visualViewport.scale * Je.visualViewport.width : Je.outerWidth) / Je.innerWidth,
      x = 0,
      w = La(t) ? function () {
        return t(n);
      } : function () {
        return t || 2.8;
      },
      _ = lc(p, e.type, !0, r),
      T = Aa,
      S = Aa;
    return h && He.set(h, {
      y: "+=0"
    }), e.ignoreCheck = function (e) {
      return k && "touchmove" === e.type && function ignoreDrag() {
        if (o) {
          requestAnimationFrame(Ep);
          var e = Ba(n.deltaY / 2),
            t = S(v.v - e);
          if (h && t !== v.v + v.offset) {
            v.offset = t - v.v;
            var r = Ba((parseFloat(h && h._gsap.y) || 0) - v.offset);
            h.style.transform = "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, " + r + ", 0, 1)", h._gsap.y = r + "px", v.cacheID = ze.cache, j();
          }
          return !0;
        }
        v.offset && Ip(), o = !0;
      }() || 1.05 < m && "touchstart" !== e.type || n.isGesturing || e.touches && 1 < e.touches.length;
    }, e.onPress = function () {
      var e = m;
      m = Ba((Je.visualViewport && Je.visualViewport.scale || 1) / y), a.pause(), e !== m && ic(p, 1.01 < m || !f && "x"), c = b(), u = v(), Hp(), l = Dt;
    }, e.onRelease = e.onGestureStart = function (e, t) {
      if (v.offset && Ip(), t) {
        ze.cache++;
        var r,
          n,
          o = w();
        f && (n = (r = b()) + .05 * o * -e.velocityX / .227, o *= hc(b, r, n, Ia(p, Xe)), a.vars.scrollX = T(n)), n = (r = v()) + .05 * o * -e.velocityY / .227, o *= hc(v, r, n, Ia(p, Ke)), a.vars.scrollY = S(n), a.invalidate().duration(o).play(.01), (k && a.vars.scrollY >= i || i - 1 <= r) && He.to({}, {
          onUpdate: Op,
          duration: o
        });
      } else s.restart(!0);
    }, e.onWheel = function () {
      a._ts && a.pause(), 1e3 < gt() - x && (l = 0, x = gt());
    }, e.onChange = function (e, t, r, n, o) {
      if (Dt !== l && Hp(), t && f && b(T(n[2] === t ? c + (e.startX - e.x) : b() + t - n[1])), r) {
        v.offset && Ip();
        var i = o[2] === r,
          a = i ? u + e.startY - e.y : v() + r - o[1],
          s = S(a);
        i && a !== s && (u += s - a), v(s);
      }
      (r || t) && j();
    }, e.onEnable = function () {
      ic(p, !f && "x"), Q.addEventListener("refresh", Op), ob(Je, "resize", Op), v.smooth && (v.target.style.scrollBehavior = "auto", v.smooth = b.smooth = !1), _.enable();
    }, e.onDisable = function () {
      ic(p, !0), pb(Je, "resize", Op), Q.removeEventListener("refresh", Op), _.kill();
    }, e.lockAxis = !1 !== e.lockAxis, ((n = new E(e)).iOS = k) && !v() && v(1), k && He.ticker.add(Aa), s = n._dc, a = He.to(n, {
      ease: "power4",
      paused: !0,
      scrollX: f ? "+=0.1" : "+=0",
      scrollY: "+=0.1",
      onComplete: s.vars.onComplete
    }), n;
  }
  var ee,
    te = {
      auto: 1,
      scroll: 1
    },
    re = /(input|label|select|textarea)/i,
    ne = function _captureInputs(e) {
      var t = re.test(e.target.tagName);
      (t || ee) && (e._gsapAllow = !0, ee = t);
    };
  Q.sort = function (e) {
    return At.sort(e || function (e, t) {
      return -1e6 * (e.vars.refreshPriority || 0) + e.start - (t.start + -1e6 * (t.vars.refreshPriority || 0));
    });
  }, Q.observe = function (e) {
    return new E(e);
  }, Q.normalizeScroll = function (e) {
    if (void 0 === e) return v;
    if (!0 === e && v) return v.enable();
    if (!1 === e) return v && v.kill();
    var t = e instanceof E ? e : pc(e);
    return v && v.target === t.target && v.kill(), Ea(t.target) && (v = t), t;
  }, Q.core = {
    _getVelocityProp: L,
    _inputObserver: lc,
    _scrollers: ze,
    _proxies: Fe,
    bridge: {
      ss: function ss() {
        ht || W("scrollStart"), ht = gt();
      },
      ref: function ref() {
        return nt;
      }
    }
  }, Da() && He.registerPlugin(Q), e.ScrollTrigger = Q, e.default = Q;
  if (typeof window === "undefined" || window !== e) {
    Object.defineProperty(e, "__esModule", {
      value: !0
    });
  } else {
    delete e.default;
  }
});

},{}]},{},[1])


//# sourceMappingURL=main.min.js.map
